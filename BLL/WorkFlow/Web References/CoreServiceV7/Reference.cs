//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace Anchor.FA.BLL.WorkFlow.CoreServiceV7 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://Anchor120V7.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTelephoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmbulancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestAlarmEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDispatcherDeskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmbulancePersonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorPersonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmbulanceTerminalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCentersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmbulanceCommandRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAmbulanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback HangupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelHangupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyDescribleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventUnLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback PauseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AmbulancePersonCheckInOperationCompleted;
        
        private System.Threading.SendOrPostCallback AmbulancePersonCheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHistoryStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAmbOnlineStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeskInfoByMachineNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParameterNetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmbInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRealSendHospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventAndAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventChildsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAcceptAndTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskInfoByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyAmbStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTelephoneInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAlarmCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAlarmCallOtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGpsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGpsLastDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskGpsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback StationMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback HospitalMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback TelephoneMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback TelephoneSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReSendCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoticeMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoticeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveNoticeMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperatorLogInOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperatorLogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeskChangeStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmbulancePersonsByAmbulanceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOperatePersonPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTelLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTelQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthorizeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertStationMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationMsgDataSetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Anchor.FA.BLL.WorkFlow.Properties.Settings.Default.Anchor_FA_BLL_WorkFlow_CoreServiceV7_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllCompletedEventHandler GetAllCompleted;
        
        /// <remarks/>
        public event RefreshAllCompletedEventHandler RefreshAllCompleted;
        
        /// <remarks/>
        public event GetStationsCompletedEventHandler GetStationsCompleted;
        
        /// <remarks/>
        public event SaveTelephoneInfoCompletedEventHandler SaveTelephoneInfoCompleted;
        
        /// <remarks/>
        public event GetAmbulancesCompletedEventHandler GetAmbulancesCompleted;
        
        /// <remarks/>
        public event GetLatestAlarmEventsCompletedEventHandler GetLatestAlarmEventsCompleted;
        
        /// <remarks/>
        public event GetAllDispatcherDeskCompletedEventHandler GetAllDispatcherDeskCompleted;
        
        /// <remarks/>
        public event GetAmbulancePersonsCompletedEventHandler GetAmbulancePersonsCompleted;
        
        /// <remarks/>
        public event GetAllDictionaryCompletedEventHandler GetAllDictionaryCompleted;
        
        /// <remarks/>
        public event GetHospitalsCompletedEventHandler GetHospitalsCompleted;
        
        /// <remarks/>
        public event GetOperatorPersonsCompletedEventHandler GetOperatorPersonsCompleted;
        
        /// <remarks/>
        public event GetAmbulanceTerminalsCompletedEventHandler GetAmbulanceTerminalsCompleted;
        
        /// <remarks/>
        public event GetCentersCompletedEventHandler GetCentersCompleted;
        
        /// <remarks/>
        public event GetAmbulanceCommandRecordCompletedEventHandler GetAmbulanceCommandRecordCompleted;
        
        /// <remarks/>
        public event SendAmbulanceCompletedEventHandler SendAmbulanceCompleted;
        
        /// <remarks/>
        public event HangupCompletedEventHandler HangupCompleted;
        
        /// <remarks/>
        public event CancelHangupCompletedEventHandler CancelHangupCompleted;
        
        /// <remarks/>
        public event RejectCompletedEventHandler RejectCompleted;
        
        /// <remarks/>
        public event ModifyDescribleCompletedEventHandler ModifyDescribleCompleted;
        
        /// <remarks/>
        public event EventLockCompletedEventHandler EventLockCompleted;
        
        /// <remarks/>
        public event EventUnLockCompletedEventHandler EventUnLockCompleted;
        
        /// <remarks/>
        public event ModifyStateCompletedEventHandler ModifyStateCompleted;
        
        /// <remarks/>
        public event StopTaskCompletedEventHandler StopTaskCompleted;
        
        /// <remarks/>
        public event PauseCompletedEventHandler PauseCompleted;
        
        /// <remarks/>
        public event ResumeCompletedEventHandler ResumeCompleted;
        
        /// <remarks/>
        public event AmbulancePersonCheckInCompletedEventHandler AmbulancePersonCheckInCompleted;
        
        /// <remarks/>
        public event AmbulancePersonCheckOutCompletedEventHandler AmbulancePersonCheckOutCompleted;
        
        /// <remarks/>
        public event UpdateHistoryStateCompletedEventHandler UpdateHistoryStateCompleted;
        
        /// <remarks/>
        public event UpdateAmbOnlineStateCompletedEventHandler UpdateAmbOnlineStateCompleted;
        
        /// <remarks/>
        public event EventFinishCompletedEventHandler EventFinishCompleted;
        
        /// <remarks/>
        public event GetDeskInfoByMachineNameCompletedEventHandler GetDeskInfoByMachineNameCompleted;
        
        /// <remarks/>
        public event GetParameterNetInfoCompletedEventHandler GetParameterNetInfoCompleted;
        
        /// <remarks/>
        public event GetAmbInfoListCompletedEventHandler GetAmbInfoListCompleted;
        
        /// <remarks/>
        public event UpdateRealSendHospitalCompletedEventHandler UpdateRealSendHospitalCompleted;
        
        /// <remarks/>
        public event GetEventAndAcceptCompletedEventHandler GetEventAndAcceptCompleted;
        
        /// <remarks/>
        public event GetEventChildsInfoCompletedEventHandler GetEventChildsInfoCompleted;
        
        /// <remarks/>
        public event GetAcceptAndTaskCompletedEventHandler GetAcceptAndTaskCompleted;
        
        /// <remarks/>
        public event GetTaskInfoByCodeCompletedEventHandler GetTaskInfoByCodeCompleted;
        
        /// <remarks/>
        public event ModifyAmbStationCompletedEventHandler ModifyAmbStationCompleted;
        
        /// <remarks/>
        public event GetTelephoneInfoCompletedEventHandler GetTelephoneInfoCompleted;
        
        /// <remarks/>
        public event InsertAlarmCallCompletedEventHandler InsertAlarmCallCompleted;
        
        /// <remarks/>
        public event InsertAlarmCallOtherCompletedEventHandler InsertAlarmCallOtherCompleted;
        
        /// <remarks/>
        public event GetGpsDataSetCompletedEventHandler GetGpsDataSetCompleted;
        
        /// <remarks/>
        public event GetGpsLastDataSetCompletedEventHandler GetGpsLastDataSetCompleted;
        
        /// <remarks/>
        public event GetTaskGpsDataCompletedEventHandler GetTaskGpsDataCompleted;
        
        /// <remarks/>
        public event StationMarkCompletedEventHandler StationMarkCompleted;
        
        /// <remarks/>
        public event HospitalMarkCompletedEventHandler HospitalMarkCompleted;
        
        /// <remarks/>
        public event TelephoneMarkCompletedEventHandler TelephoneMarkCompleted;
        
        /// <remarks/>
        public event TelephoneSelectCompletedEventHandler TelephoneSelectCompleted;
        
        /// <remarks/>
        public event ReSendCommandCompletedEventHandler ReSendCommandCompleted;
        
        /// <remarks/>
        public event GetNoticeMessageCompletedEventHandler GetNoticeMessageCompleted;
        
        /// <remarks/>
        public event GetNoticeLogCompletedEventHandler GetNoticeLogCompleted;
        
        /// <remarks/>
        public event SaveNoticeMessageCompletedEventHandler SaveNoticeMessageCompleted;
        
        /// <remarks/>
        public event OperatorLogInCompletedEventHandler OperatorLogInCompleted;
        
        /// <remarks/>
        public event OperatorLogOutCompletedEventHandler OperatorLogOutCompleted;
        
        /// <remarks/>
        public event DeskChangeStateCompletedEventHandler DeskChangeStateCompleted;
        
        /// <remarks/>
        public event GetAmbulancePersonsByAmbulanceCodeCompletedEventHandler GetAmbulancePersonsByAmbulanceCodeCompleted;
        
        /// <remarks/>
        public event ModifyOperatePersonPasswordCompletedEventHandler ModifyOperatePersonPasswordCompleted;
        
        /// <remarks/>
        public event GetTelLogCompletedEventHandler GetTelLogCompleted;
        
        /// <remarks/>
        public event GetTelQueueCompletedEventHandler GetTelQueueCompleted;
        
        /// <remarks/>
        public event GetAuthorizeInfoCompletedEventHandler GetAuthorizeInfoCompleted;
        
        /// <remarks/>
        public event InsertStationMsgCompletedEventHandler InsertStationMsgCompleted;
        
        /// <remarks/>
        public event GetStationMsgDataSetCompletedEventHandler GetStationMsgDataSetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAll", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAll() {
            object[] results = this.Invoke("GetAll", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAsync() {
            this.GetAllAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAsync(object userState) {
            if ((this.GetAllOperationCompleted == null)) {
                this.GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOperationCompleted);
            }
            this.InvokeAsync("GetAll", new object[0], this.GetAllOperationCompleted, userState);
        }
        
        private void OnGetAllOperationCompleted(object arg) {
            if ((this.GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/RefreshAll", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RefreshAll() {
            this.Invoke("RefreshAll", new object[0]);
        }
        
        /// <remarks/>
        public void RefreshAllAsync() {
            this.RefreshAllAsync(null);
        }
        
        /// <remarks/>
        public void RefreshAllAsync(object userState) {
            if ((this.RefreshAllOperationCompleted == null)) {
                this.RefreshAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshAllOperationCompleted);
            }
            this.InvokeAsync("RefreshAll", new object[0], this.RefreshAllOperationCompleted, userState);
        }
        
        private void OnRefreshAllOperationCompleted(object arg) {
            if ((this.RefreshAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetStations", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStations() {
            object[] results = this.Invoke("GetStations", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationsAsync() {
            this.GetStationsAsync(null);
        }
        
        /// <remarks/>
        public void GetStationsAsync(object userState) {
            if ((this.GetStationsOperationCompleted == null)) {
                this.GetStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationsOperationCompleted);
            }
            this.InvokeAsync("GetStations", new object[0], this.GetStationsOperationCompleted, userState);
        }
        
        private void OnGetStationsOperationCompleted(object arg) {
            if ((this.GetStationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationsCompleted(this, new GetStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/SaveTelephoneInfo", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveTelephoneInfo(TelephoneInfo info) {
            this.Invoke("SaveTelephoneInfo", new object[] {
                        info});
        }
        
        /// <remarks/>
        public void SaveTelephoneInfoAsync(TelephoneInfo info) {
            this.SaveTelephoneInfoAsync(info, null);
        }
        
        /// <remarks/>
        public void SaveTelephoneInfoAsync(TelephoneInfo info, object userState) {
            if ((this.SaveTelephoneInfoOperationCompleted == null)) {
                this.SaveTelephoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTelephoneInfoOperationCompleted);
            }
            this.InvokeAsync("SaveTelephoneInfo", new object[] {
                        info}, this.SaveTelephoneInfoOperationCompleted, userState);
        }
        
        private void OnSaveTelephoneInfoOperationCompleted(object arg) {
            if ((this.SaveTelephoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTelephoneInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAmbulances", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAmbulances() {
            object[] results = this.Invoke("GetAmbulances", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmbulancesAsync() {
            this.GetAmbulancesAsync(null);
        }
        
        /// <remarks/>
        public void GetAmbulancesAsync(object userState) {
            if ((this.GetAmbulancesOperationCompleted == null)) {
                this.GetAmbulancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmbulancesOperationCompleted);
            }
            this.InvokeAsync("GetAmbulances", new object[0], this.GetAmbulancesOperationCompleted, userState);
        }
        
        private void OnGetAmbulancesOperationCompleted(object arg) {
            if ((this.GetAmbulancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmbulancesCompleted(this, new GetAmbulancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetLatestAlarmEvents", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLatestAlarmEvents() {
            object[] results = this.Invoke("GetLatestAlarmEvents", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestAlarmEventsAsync() {
            this.GetLatestAlarmEventsAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestAlarmEventsAsync(object userState) {
            if ((this.GetLatestAlarmEventsOperationCompleted == null)) {
                this.GetLatestAlarmEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestAlarmEventsOperationCompleted);
            }
            this.InvokeAsync("GetLatestAlarmEvents", new object[0], this.GetLatestAlarmEventsOperationCompleted, userState);
        }
        
        private void OnGetLatestAlarmEventsOperationCompleted(object arg) {
            if ((this.GetLatestAlarmEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestAlarmEventsCompleted(this, new GetLatestAlarmEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAllDispatcherDesk", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllDispatcherDesk() {
            object[] results = this.Invoke("GetAllDispatcherDesk", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDispatcherDeskAsync() {
            this.GetAllDispatcherDeskAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDispatcherDeskAsync(object userState) {
            if ((this.GetAllDispatcherDeskOperationCompleted == null)) {
                this.GetAllDispatcherDeskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDispatcherDeskOperationCompleted);
            }
            this.InvokeAsync("GetAllDispatcherDesk", new object[0], this.GetAllDispatcherDeskOperationCompleted, userState);
        }
        
        private void OnGetAllDispatcherDeskOperationCompleted(object arg) {
            if ((this.GetAllDispatcherDeskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDispatcherDeskCompleted(this, new GetAllDispatcherDeskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAmbulancePersons", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAmbulancePersons() {
            object[] results = this.Invoke("GetAmbulancePersons", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmbulancePersonsAsync() {
            this.GetAmbulancePersonsAsync(null);
        }
        
        /// <remarks/>
        public void GetAmbulancePersonsAsync(object userState) {
            if ((this.GetAmbulancePersonsOperationCompleted == null)) {
                this.GetAmbulancePersonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmbulancePersonsOperationCompleted);
            }
            this.InvokeAsync("GetAmbulancePersons", new object[0], this.GetAmbulancePersonsOperationCompleted, userState);
        }
        
        private void OnGetAmbulancePersonsOperationCompleted(object arg) {
            if ((this.GetAmbulancePersonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmbulancePersonsCompleted(this, new GetAmbulancePersonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAllDictionary", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllDictionary() {
            object[] results = this.Invoke("GetAllDictionary", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDictionaryAsync() {
            this.GetAllDictionaryAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDictionaryAsync(object userState) {
            if ((this.GetAllDictionaryOperationCompleted == null)) {
                this.GetAllDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDictionaryOperationCompleted);
            }
            this.InvokeAsync("GetAllDictionary", new object[0], this.GetAllDictionaryOperationCompleted, userState);
        }
        
        private void OnGetAllDictionaryOperationCompleted(object arg) {
            if ((this.GetAllDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDictionaryCompleted(this, new GetAllDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetHospitals", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHospitals() {
            object[] results = this.Invoke("GetHospitals", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalsAsync() {
            this.GetHospitalsAsync(null);
        }
        
        /// <remarks/>
        public void GetHospitalsAsync(object userState) {
            if ((this.GetHospitalsOperationCompleted == null)) {
                this.GetHospitalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalsOperationCompleted);
            }
            this.InvokeAsync("GetHospitals", new object[0], this.GetHospitalsOperationCompleted, userState);
        }
        
        private void OnGetHospitalsOperationCompleted(object arg) {
            if ((this.GetHospitalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalsCompleted(this, new GetHospitalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetOperatorPersons", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonInfo[] GetOperatorPersons() {
            object[] results = this.Invoke("GetOperatorPersons", new object[0]);
            return ((PersonInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorPersonsAsync() {
            this.GetOperatorPersonsAsync(null);
        }
        
        /// <remarks/>
        public void GetOperatorPersonsAsync(object userState) {
            if ((this.GetOperatorPersonsOperationCompleted == null)) {
                this.GetOperatorPersonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorPersonsOperationCompleted);
            }
            this.InvokeAsync("GetOperatorPersons", new object[0], this.GetOperatorPersonsOperationCompleted, userState);
        }
        
        private void OnGetOperatorPersonsOperationCompleted(object arg) {
            if ((this.GetOperatorPersonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorPersonsCompleted(this, new GetOperatorPersonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAmbulanceTerminals", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAmbulanceTerminals() {
            object[] results = this.Invoke("GetAmbulanceTerminals", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmbulanceTerminalsAsync() {
            this.GetAmbulanceTerminalsAsync(null);
        }
        
        /// <remarks/>
        public void GetAmbulanceTerminalsAsync(object userState) {
            if ((this.GetAmbulanceTerminalsOperationCompleted == null)) {
                this.GetAmbulanceTerminalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmbulanceTerminalsOperationCompleted);
            }
            this.InvokeAsync("GetAmbulanceTerminals", new object[0], this.GetAmbulanceTerminalsOperationCompleted, userState);
        }
        
        private void OnGetAmbulanceTerminalsOperationCompleted(object arg) {
            if ((this.GetAmbulanceTerminalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmbulanceTerminalsCompleted(this, new GetAmbulanceTerminalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetCenters", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCenters() {
            object[] results = this.Invoke("GetCenters", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCentersAsync() {
            this.GetCentersAsync(null);
        }
        
        /// <remarks/>
        public void GetCentersAsync(object userState) {
            if ((this.GetCentersOperationCompleted == null)) {
                this.GetCentersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCentersOperationCompleted);
            }
            this.InvokeAsync("GetCenters", new object[0], this.GetCentersOperationCompleted, userState);
        }
        
        private void OnGetCentersOperationCompleted(object arg) {
            if ((this.GetCentersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCentersCompleted(this, new GetCentersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAmbulanceCommandRecord", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AmbulanceCommandRecordInfo GetAmbulanceCommandRecord(string ambCode) {
            object[] results = this.Invoke("GetAmbulanceCommandRecord", new object[] {
                        ambCode});
            return ((AmbulanceCommandRecordInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmbulanceCommandRecordAsync(string ambCode) {
            this.GetAmbulanceCommandRecordAsync(ambCode, null);
        }
        
        /// <remarks/>
        public void GetAmbulanceCommandRecordAsync(string ambCode, object userState) {
            if ((this.GetAmbulanceCommandRecordOperationCompleted == null)) {
                this.GetAmbulanceCommandRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmbulanceCommandRecordOperationCompleted);
            }
            this.InvokeAsync("GetAmbulanceCommandRecord", new object[] {
                        ambCode}, this.GetAmbulanceCommandRecordOperationCompleted, userState);
        }
        
        private void OnGetAmbulanceCommandRecordOperationCompleted(object arg) {
            if ((this.GetAmbulanceCommandRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmbulanceCommandRecordCompleted(this, new GetAmbulanceCommandRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/SendAmbulance", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendAmbulance(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, PreTaskInfo[] preTaskInfos, string deskCode, ESendAmbulanceType sendType, bool enableNavi) {
            this.Invoke("SendAmbulance", new object[] {
                        alarmEventInfo,
                        acceptEventInfo,
                        preTaskInfos,
                        deskCode,
                        sendType,
                        enableNavi});
        }
        
        /// <remarks/>
        public void SendAmbulanceAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, PreTaskInfo[] preTaskInfos, string deskCode, ESendAmbulanceType sendType, bool enableNavi) {
            this.SendAmbulanceAsync(alarmEventInfo, acceptEventInfo, preTaskInfos, deskCode, sendType, enableNavi, null);
        }
        
        /// <remarks/>
        public void SendAmbulanceAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, PreTaskInfo[] preTaskInfos, string deskCode, ESendAmbulanceType sendType, bool enableNavi, object userState) {
            if ((this.SendAmbulanceOperationCompleted == null)) {
                this.SendAmbulanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAmbulanceOperationCompleted);
            }
            this.InvokeAsync("SendAmbulance", new object[] {
                        alarmEventInfo,
                        acceptEventInfo,
                        preTaskInfos,
                        deskCode,
                        sendType,
                        enableNavi}, this.SendAmbulanceOperationCompleted, userState);
        }
        
        private void OnSendAmbulanceOperationCompleted(object arg) {
            if ((this.SendAmbulanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAmbulanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/Hangup", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Hangup(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, bool isNewAlarm) {
            this.Invoke("Hangup", new object[] {
                        alarmEventInfo,
                        acceptEventInfo,
                        isNewAlarm});
        }
        
        /// <remarks/>
        public void HangupAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, bool isNewAlarm) {
            this.HangupAsync(alarmEventInfo, acceptEventInfo, isNewAlarm, null);
        }
        
        /// <remarks/>
        public void HangupAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, bool isNewAlarm, object userState) {
            if ((this.HangupOperationCompleted == null)) {
                this.HangupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHangupOperationCompleted);
            }
            this.InvokeAsync("Hangup", new object[] {
                        alarmEventInfo,
                        acceptEventInfo,
                        isNewAlarm}, this.HangupOperationCompleted, userState);
        }
        
        private void OnHangupOperationCompleted(object arg) {
            if ((this.HangupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HangupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/CancelHangup", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelHangup(string alarmEventCode, AcceptEventInfo acceptEventInfo) {
            this.Invoke("CancelHangup", new object[] {
                        alarmEventCode,
                        acceptEventInfo});
        }
        
        /// <remarks/>
        public void CancelHangupAsync(string alarmEventCode, AcceptEventInfo acceptEventInfo) {
            this.CancelHangupAsync(alarmEventCode, acceptEventInfo, null);
        }
        
        /// <remarks/>
        public void CancelHangupAsync(string alarmEventCode, AcceptEventInfo acceptEventInfo, object userState) {
            if ((this.CancelHangupOperationCompleted == null)) {
                this.CancelHangupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelHangupOperationCompleted);
            }
            this.InvokeAsync("CancelHangup", new object[] {
                        alarmEventCode,
                        acceptEventInfo}, this.CancelHangupOperationCompleted, userState);
        }
        
        private void OnCancelHangupOperationCompleted(object arg) {
            if ((this.CancelHangupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelHangupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/Reject", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Reject(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo) {
            this.Invoke("Reject", new object[] {
                        alarmEventInfo,
                        acceptEventInfo});
        }
        
        /// <remarks/>
        public void RejectAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo) {
            this.RejectAsync(alarmEventInfo, acceptEventInfo, null);
        }
        
        /// <remarks/>
        public void RejectAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo acceptEventInfo, object userState) {
            if ((this.RejectOperationCompleted == null)) {
                this.RejectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectOperationCompleted);
            }
            this.InvokeAsync("Reject", new object[] {
                        alarmEventInfo,
                        acceptEventInfo}, this.RejectOperationCompleted, userState);
        }
        
        private void OnRejectOperationCompleted(object arg) {
            if ((this.RejectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/ModifyDescrible", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyDescrible(AlarmEventInfo alarmEventInfo, AcceptEventInfo accInfo, string operatorCode) {
            this.Invoke("ModifyDescrible", new object[] {
                        alarmEventInfo,
                        accInfo,
                        operatorCode});
        }
        
        /// <remarks/>
        public void ModifyDescribleAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo accInfo, string operatorCode) {
            this.ModifyDescribleAsync(alarmEventInfo, accInfo, operatorCode, null);
        }
        
        /// <remarks/>
        public void ModifyDescribleAsync(AlarmEventInfo alarmEventInfo, AcceptEventInfo accInfo, string operatorCode, object userState) {
            if ((this.ModifyDescribleOperationCompleted == null)) {
                this.ModifyDescribleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyDescribleOperationCompleted);
            }
            this.InvokeAsync("ModifyDescrible", new object[] {
                        alarmEventInfo,
                        accInfo,
                        operatorCode}, this.ModifyDescribleOperationCompleted, userState);
        }
        
        private void OnModifyDescribleOperationCompleted(object arg) {
            if ((this.ModifyDescribleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyDescribleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/EventLock", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EventLock(string eventCode, string deskCode) {
            object[] results = this.Invoke("EventLock", new object[] {
                        eventCode,
                        deskCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EventLockAsync(string eventCode, string deskCode) {
            this.EventLockAsync(eventCode, deskCode, null);
        }
        
        /// <remarks/>
        public void EventLockAsync(string eventCode, string deskCode, object userState) {
            if ((this.EventLockOperationCompleted == null)) {
                this.EventLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventLockOperationCompleted);
            }
            this.InvokeAsync("EventLock", new object[] {
                        eventCode,
                        deskCode}, this.EventLockOperationCompleted, userState);
        }
        
        private void OnEventLockOperationCompleted(object arg) {
            if ((this.EventLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventLockCompleted(this, new EventLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/EventUnLock", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EventUnLock(string eventCode) {
            this.Invoke("EventUnLock", new object[] {
                        eventCode});
        }
        
        /// <remarks/>
        public void EventUnLockAsync(string eventCode) {
            this.EventUnLockAsync(eventCode, null);
        }
        
        /// <remarks/>
        public void EventUnLockAsync(string eventCode, object userState) {
            if ((this.EventUnLockOperationCompleted == null)) {
                this.EventUnLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventUnLockOperationCompleted);
            }
            this.InvokeAsync("EventUnLock", new object[] {
                        eventCode}, this.EventUnLockOperationCompleted, userState);
        }
        
        private void OnEventUnLockOperationCompleted(object arg) {
            if ((this.EventUnLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventUnLockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/ModifyState", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyState(string ambulanceCode, int newState, System.DateTime happendTime, int operationOrigin, string operatePersonCode, string taskCode) {
            this.Invoke("ModifyState", new object[] {
                        ambulanceCode,
                        newState,
                        happendTime,
                        operationOrigin,
                        operatePersonCode,
                        taskCode});
        }
        
        /// <remarks/>
        public void ModifyStateAsync(string ambulanceCode, int newState, System.DateTime happendTime, int operationOrigin, string operatePersonCode, string taskCode) {
            this.ModifyStateAsync(ambulanceCode, newState, happendTime, operationOrigin, operatePersonCode, taskCode, null);
        }
        
        /// <remarks/>
        public void ModifyStateAsync(string ambulanceCode, int newState, System.DateTime happendTime, int operationOrigin, string operatePersonCode, string taskCode, object userState) {
            if ((this.ModifyStateOperationCompleted == null)) {
                this.ModifyStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyStateOperationCompleted);
            }
            this.InvokeAsync("ModifyState", new object[] {
                        ambulanceCode,
                        newState,
                        happendTime,
                        operationOrigin,
                        operatePersonCode,
                        taskCode}, this.ModifyStateOperationCompleted, userState);
        }
        
        private void OnModifyStateOperationCompleted(object arg) {
            if ((this.ModifyStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/StopTask", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopTask(string ambulanceCode, int abnormalReasonId, System.DateTime happenTime, int operationOriginId, string operatePersonCode, string remark) {
            this.Invoke("StopTask", new object[] {
                        ambulanceCode,
                        abnormalReasonId,
                        happenTime,
                        operationOriginId,
                        operatePersonCode,
                        remark});
        }
        
        /// <remarks/>
        public void StopTaskAsync(string ambulanceCode, int abnormalReasonId, System.DateTime happenTime, int operationOriginId, string operatePersonCode, string remark) {
            this.StopTaskAsync(ambulanceCode, abnormalReasonId, happenTime, operationOriginId, operatePersonCode, remark, null);
        }
        
        /// <remarks/>
        public void StopTaskAsync(string ambulanceCode, int abnormalReasonId, System.DateTime happenTime, int operationOriginId, string operatePersonCode, string remark, object userState) {
            if ((this.StopTaskOperationCompleted == null)) {
                this.StopTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopTaskOperationCompleted);
            }
            this.InvokeAsync("StopTask", new object[] {
                        ambulanceCode,
                        abnormalReasonId,
                        happenTime,
                        operationOriginId,
                        operatePersonCode,
                        remark}, this.StopTaskOperationCompleted, userState);
        }
        
        private void OnStopTaskOperationCompleted(object arg) {
            if ((this.StopTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/Pause", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Pause(string ambCode, int pauseReasonId, System.DateTime pauseTime, int operationOriginId, string operatePersonCode, string remark) {
            this.Invoke("Pause", new object[] {
                        ambCode,
                        pauseReasonId,
                        pauseTime,
                        operationOriginId,
                        operatePersonCode,
                        remark});
        }
        
        /// <remarks/>
        public void PauseAsync(string ambCode, int pauseReasonId, System.DateTime pauseTime, int operationOriginId, string operatePersonCode, string remark) {
            this.PauseAsync(ambCode, pauseReasonId, pauseTime, operationOriginId, operatePersonCode, remark, null);
        }
        
        /// <remarks/>
        public void PauseAsync(string ambCode, int pauseReasonId, System.DateTime pauseTime, int operationOriginId, string operatePersonCode, string remark, object userState) {
            if ((this.PauseOperationCompleted == null)) {
                this.PauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPauseOperationCompleted);
            }
            this.InvokeAsync("Pause", new object[] {
                        ambCode,
                        pauseReasonId,
                        pauseTime,
                        operationOriginId,
                        operatePersonCode,
                        remark}, this.PauseOperationCompleted, userState);
        }
        
        private void OnPauseOperationCompleted(object arg) {
            if ((this.PauseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PauseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/Resume", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Resume(string ambCode, System.DateTime resumeTime, int operationOrigin, string operatePersonCode) {
            this.Invoke("Resume", new object[] {
                        ambCode,
                        resumeTime,
                        operationOrigin,
                        operatePersonCode});
        }
        
        /// <remarks/>
        public void ResumeAsync(string ambCode, System.DateTime resumeTime, int operationOrigin, string operatePersonCode) {
            this.ResumeAsync(ambCode, resumeTime, operationOrigin, operatePersonCode, null);
        }
        
        /// <remarks/>
        public void ResumeAsync(string ambCode, System.DateTime resumeTime, int operationOrigin, string operatePersonCode, object userState) {
            if ((this.ResumeOperationCompleted == null)) {
                this.ResumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResumeOperationCompleted);
            }
            this.InvokeAsync("Resume", new object[] {
                        ambCode,
                        resumeTime,
                        operationOrigin,
                        operatePersonCode}, this.ResumeOperationCompleted, userState);
        }
        
        private void OnResumeOperationCompleted(object arg) {
            if ((this.ResumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResumeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/AmbulancePersonCheckIn", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonInfo AmbulancePersonCheckIn(string personCode, string ambCode, int operationOrigin, string operatePersonCode, System.DateTime operateTime) {
            object[] results = this.Invoke("AmbulancePersonCheckIn", new object[] {
                        personCode,
                        ambCode,
                        operationOrigin,
                        operatePersonCode,
                        operateTime});
            return ((PersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public void AmbulancePersonCheckInAsync(string personCode, string ambCode, int operationOrigin, string operatePersonCode, System.DateTime operateTime) {
            this.AmbulancePersonCheckInAsync(personCode, ambCode, operationOrigin, operatePersonCode, operateTime, null);
        }
        
        /// <remarks/>
        public void AmbulancePersonCheckInAsync(string personCode, string ambCode, int operationOrigin, string operatePersonCode, System.DateTime operateTime, object userState) {
            if ((this.AmbulancePersonCheckInOperationCompleted == null)) {
                this.AmbulancePersonCheckInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAmbulancePersonCheckInOperationCompleted);
            }
            this.InvokeAsync("AmbulancePersonCheckIn", new object[] {
                        personCode,
                        ambCode,
                        operationOrigin,
                        operatePersonCode,
                        operateTime}, this.AmbulancePersonCheckInOperationCompleted, userState);
        }
        
        private void OnAmbulancePersonCheckInOperationCompleted(object arg) {
            if ((this.AmbulancePersonCheckInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AmbulancePersonCheckInCompleted(this, new AmbulancePersonCheckInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/AmbulancePersonCheckOut", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonInfo AmbulancePersonCheckOut(string personCode, string ambCode, int operationOrigin, string operatePersonCode, System.DateTime operateTime) {
            object[] results = this.Invoke("AmbulancePersonCheckOut", new object[] {
                        personCode,
                        ambCode,
                        operationOrigin,
                        operatePersonCode,
                        operateTime});
            return ((PersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public void AmbulancePersonCheckOutAsync(string personCode, string ambCode, int operationOrigin, string operatePersonCode, System.DateTime operateTime) {
            this.AmbulancePersonCheckOutAsync(personCode, ambCode, operationOrigin, operatePersonCode, operateTime, null);
        }
        
        /// <remarks/>
        public void AmbulancePersonCheckOutAsync(string personCode, string ambCode, int operationOrigin, string operatePersonCode, System.DateTime operateTime, object userState) {
            if ((this.AmbulancePersonCheckOutOperationCompleted == null)) {
                this.AmbulancePersonCheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAmbulancePersonCheckOutOperationCompleted);
            }
            this.InvokeAsync("AmbulancePersonCheckOut", new object[] {
                        personCode,
                        ambCode,
                        operationOrigin,
                        operatePersonCode,
                        operateTime}, this.AmbulancePersonCheckOutOperationCompleted, userState);
        }
        
        private void OnAmbulancePersonCheckOutOperationCompleted(object arg) {
            if ((this.AmbulancePersonCheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AmbulancePersonCheckOutCompleted(this, new AmbulancePersonCheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/UpdateHistoryState", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHistoryState(string ambCode, int taskOrder, HistoryStateInfo[] stateInfos) {
            this.Invoke("UpdateHistoryState", new object[] {
                        ambCode,
                        taskOrder,
                        stateInfos});
        }
        
        /// <remarks/>
        public void UpdateHistoryStateAsync(string ambCode, int taskOrder, HistoryStateInfo[] stateInfos) {
            this.UpdateHistoryStateAsync(ambCode, taskOrder, stateInfos, null);
        }
        
        /// <remarks/>
        public void UpdateHistoryStateAsync(string ambCode, int taskOrder, HistoryStateInfo[] stateInfos, object userState) {
            if ((this.UpdateHistoryStateOperationCompleted == null)) {
                this.UpdateHistoryStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHistoryStateOperationCompleted);
            }
            this.InvokeAsync("UpdateHistoryState", new object[] {
                        ambCode,
                        taskOrder,
                        stateInfos}, this.UpdateHistoryStateOperationCompleted, userState);
        }
        
        private void OnUpdateHistoryStateOperationCompleted(object arg) {
            if ((this.UpdateHistoryStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHistoryStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/UpdateAmbOnlineState", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAmbOnlineState(string ambCode, bool state) {
            this.Invoke("UpdateAmbOnlineState", new object[] {
                        ambCode,
                        state});
        }
        
        /// <remarks/>
        public void UpdateAmbOnlineStateAsync(string ambCode, bool state) {
            this.UpdateAmbOnlineStateAsync(ambCode, state, null);
        }
        
        /// <remarks/>
        public void UpdateAmbOnlineStateAsync(string ambCode, bool state, object userState) {
            if ((this.UpdateAmbOnlineStateOperationCompleted == null)) {
                this.UpdateAmbOnlineStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAmbOnlineStateOperationCompleted);
            }
            this.InvokeAsync("UpdateAmbOnlineState", new object[] {
                        ambCode,
                        state}, this.UpdateAmbOnlineStateOperationCompleted, userState);
        }
        
        private void OnUpdateAmbOnlineStateOperationCompleted(object arg) {
            if ((this.UpdateAmbOnlineStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAmbOnlineStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/EventFinish", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EventFinish(string eventCode) {
            this.Invoke("EventFinish", new object[] {
                        eventCode});
        }
        
        /// <remarks/>
        public void EventFinishAsync(string eventCode) {
            this.EventFinishAsync(eventCode, null);
        }
        
        /// <remarks/>
        public void EventFinishAsync(string eventCode, object userState) {
            if ((this.EventFinishOperationCompleted == null)) {
                this.EventFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventFinishOperationCompleted);
            }
            this.InvokeAsync("EventFinish", new object[] {
                        eventCode}, this.EventFinishOperationCompleted, userState);
        }
        
        private void OnEventFinishOperationCompleted(object arg) {
            if ((this.EventFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventFinishCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetDeskInfoByMachineName", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeskInfo GetDeskInfoByMachineName(string name) {
            object[] results = this.Invoke("GetDeskInfoByMachineName", new object[] {
                        name});
            return ((DeskInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeskInfoByMachineNameAsync(string name) {
            this.GetDeskInfoByMachineNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetDeskInfoByMachineNameAsync(string name, object userState) {
            if ((this.GetDeskInfoByMachineNameOperationCompleted == null)) {
                this.GetDeskInfoByMachineNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeskInfoByMachineNameOperationCompleted);
            }
            this.InvokeAsync("GetDeskInfoByMachineName", new object[] {
                        name}, this.GetDeskInfoByMachineNameOperationCompleted, userState);
        }
        
        private void OnGetDeskInfoByMachineNameOperationCompleted(object arg) {
            if ((this.GetDeskInfoByMachineNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeskInfoByMachineNameCompleted(this, new GetDeskInfoByMachineNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetParameterNetInfo", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ParameterNetInfo GetParameterNetInfo(int centerId) {
            object[] results = this.Invoke("GetParameterNetInfo", new object[] {
                        centerId});
            return ((ParameterNetInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetParameterNetInfoAsync(int centerId) {
            this.GetParameterNetInfoAsync(centerId, null);
        }
        
        /// <remarks/>
        public void GetParameterNetInfoAsync(int centerId, object userState) {
            if ((this.GetParameterNetInfoOperationCompleted == null)) {
                this.GetParameterNetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParameterNetInfoOperationCompleted);
            }
            this.InvokeAsync("GetParameterNetInfo", new object[] {
                        centerId}, this.GetParameterNetInfoOperationCompleted, userState);
        }
        
        private void OnGetParameterNetInfoOperationCompleted(object arg) {
            if ((this.GetParameterNetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParameterNetInfoCompleted(this, new GetParameterNetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAmbInfoList", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AmbulanceInfo[] GetAmbInfoList(string[] ambCodeList) {
            object[] results = this.Invoke("GetAmbInfoList", new object[] {
                        ambCodeList});
            return ((AmbulanceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAmbInfoListAsync(string[] ambCodeList) {
            this.GetAmbInfoListAsync(ambCodeList, null);
        }
        
        /// <remarks/>
        public void GetAmbInfoListAsync(string[] ambCodeList, object userState) {
            if ((this.GetAmbInfoListOperationCompleted == null)) {
                this.GetAmbInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmbInfoListOperationCompleted);
            }
            this.InvokeAsync("GetAmbInfoList", new object[] {
                        ambCodeList}, this.GetAmbInfoListOperationCompleted, userState);
        }
        
        private void OnGetAmbInfoListOperationCompleted(object arg) {
            if ((this.GetAmbInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmbInfoListCompleted(this, new GetAmbInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/UpdateRealSendHospital", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRealSendHospital(string taskCode, string hospitalName, string judge) {
            this.Invoke("UpdateRealSendHospital", new object[] {
                        taskCode,
                        hospitalName,
                        judge});
        }
        
        /// <remarks/>
        public void UpdateRealSendHospitalAsync(string taskCode, string hospitalName, string judge) {
            this.UpdateRealSendHospitalAsync(taskCode, hospitalName, judge, null);
        }
        
        /// <remarks/>
        public void UpdateRealSendHospitalAsync(string taskCode, string hospitalName, string judge, object userState) {
            if ((this.UpdateRealSendHospitalOperationCompleted == null)) {
                this.UpdateRealSendHospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRealSendHospitalOperationCompleted);
            }
            this.InvokeAsync("UpdateRealSendHospital", new object[] {
                        taskCode,
                        hospitalName,
                        judge}, this.UpdateRealSendHospitalOperationCompleted, userState);
        }
        
        private void OnUpdateRealSendHospitalOperationCompleted(object arg) {
            if ((this.UpdateRealSendHospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRealSendHospitalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetEventAndAccept", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetEventAndAccept(string eventCode, ref AlarmEventInfo aeInfo, ref AcceptEventInfo accInfo) {
            object[] results = this.Invoke("GetEventAndAccept", new object[] {
                        eventCode,
                        aeInfo,
                        accInfo});
            aeInfo = ((AlarmEventInfo)(results[0]));
            accInfo = ((AcceptEventInfo)(results[1]));
        }
        
        /// <remarks/>
        public void GetEventAndAcceptAsync(string eventCode, AlarmEventInfo aeInfo, AcceptEventInfo accInfo) {
            this.GetEventAndAcceptAsync(eventCode, aeInfo, accInfo, null);
        }
        
        /// <remarks/>
        public void GetEventAndAcceptAsync(string eventCode, AlarmEventInfo aeInfo, AcceptEventInfo accInfo, object userState) {
            if ((this.GetEventAndAcceptOperationCompleted == null)) {
                this.GetEventAndAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventAndAcceptOperationCompleted);
            }
            this.InvokeAsync("GetEventAndAccept", new object[] {
                        eventCode,
                        aeInfo,
                        accInfo}, this.GetEventAndAcceptOperationCompleted, userState);
        }
        
        private void OnGetEventAndAcceptOperationCompleted(object arg) {
            if ((this.GetEventAndAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventAndAcceptCompleted(this, new GetEventAndAcceptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetEventChildsInfo", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetEventChildsInfo(string eventCode, string taskCode, ref AlarmEventInfo aeInfo, ref AcceptEventInfo accInfo, ref TaskInfo taskInfo, ref int taskCount, ref System.Data.DataSet alarmCallDataSet) {
            object[] results = this.Invoke("GetEventChildsInfo", new object[] {
                        eventCode,
                        taskCode,
                        aeInfo,
                        accInfo,
                        taskInfo,
                        taskCount,
                        alarmCallDataSet});
            aeInfo = ((AlarmEventInfo)(results[0]));
            accInfo = ((AcceptEventInfo)(results[1]));
            taskInfo = ((TaskInfo)(results[2]));
            taskCount = ((int)(results[3]));
            alarmCallDataSet = ((System.Data.DataSet)(results[4]));
        }
        
        /// <remarks/>
        public void GetEventChildsInfoAsync(string eventCode, string taskCode, AlarmEventInfo aeInfo, AcceptEventInfo accInfo, TaskInfo taskInfo, int taskCount, System.Data.DataSet alarmCallDataSet) {
            this.GetEventChildsInfoAsync(eventCode, taskCode, aeInfo, accInfo, taskInfo, taskCount, alarmCallDataSet, null);
        }
        
        /// <remarks/>
        public void GetEventChildsInfoAsync(string eventCode, string taskCode, AlarmEventInfo aeInfo, AcceptEventInfo accInfo, TaskInfo taskInfo, int taskCount, System.Data.DataSet alarmCallDataSet, object userState) {
            if ((this.GetEventChildsInfoOperationCompleted == null)) {
                this.GetEventChildsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventChildsInfoOperationCompleted);
            }
            this.InvokeAsync("GetEventChildsInfo", new object[] {
                        eventCode,
                        taskCode,
                        aeInfo,
                        accInfo,
                        taskInfo,
                        taskCount,
                        alarmCallDataSet}, this.GetEventChildsInfoOperationCompleted, userState);
        }
        
        private void OnGetEventChildsInfoOperationCompleted(object arg) {
            if ((this.GetEventChildsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventChildsInfoCompleted(this, new GetEventChildsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAcceptAndTask", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetAcceptAndTask(string eventCode, int acceptOrder, ref AcceptEventInfo accInfo, ref TaskInfo taskInfo, ref int taskCount) {
            object[] results = this.Invoke("GetAcceptAndTask", new object[] {
                        eventCode,
                        acceptOrder,
                        accInfo,
                        taskInfo,
                        taskCount});
            accInfo = ((AcceptEventInfo)(results[0]));
            taskInfo = ((TaskInfo)(results[1]));
            taskCount = ((int)(results[2]));
        }
        
        /// <remarks/>
        public void GetAcceptAndTaskAsync(string eventCode, int acceptOrder, AcceptEventInfo accInfo, TaskInfo taskInfo, int taskCount) {
            this.GetAcceptAndTaskAsync(eventCode, acceptOrder, accInfo, taskInfo, taskCount, null);
        }
        
        /// <remarks/>
        public void GetAcceptAndTaskAsync(string eventCode, int acceptOrder, AcceptEventInfo accInfo, TaskInfo taskInfo, int taskCount, object userState) {
            if ((this.GetAcceptAndTaskOperationCompleted == null)) {
                this.GetAcceptAndTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAcceptAndTaskOperationCompleted);
            }
            this.InvokeAsync("GetAcceptAndTask", new object[] {
                        eventCode,
                        acceptOrder,
                        accInfo,
                        taskInfo,
                        taskCount}, this.GetAcceptAndTaskOperationCompleted, userState);
        }
        
        private void OnGetAcceptAndTaskOperationCompleted(object arg) {
            if ((this.GetAcceptAndTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAcceptAndTaskCompleted(this, new GetAcceptAndTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetTaskInfoByCode", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskInfo GetTaskInfoByCode(string code) {
            object[] results = this.Invoke("GetTaskInfoByCode", new object[] {
                        code});
            return ((TaskInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskInfoByCodeAsync(string code) {
            this.GetTaskInfoByCodeAsync(code, null);
        }
        
        /// <remarks/>
        public void GetTaskInfoByCodeAsync(string code, object userState) {
            if ((this.GetTaskInfoByCodeOperationCompleted == null)) {
                this.GetTaskInfoByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoByCodeOperationCompleted);
            }
            this.InvokeAsync("GetTaskInfoByCode", new object[] {
                        code}, this.GetTaskInfoByCodeOperationCompleted, userState);
        }
        
        private void OnGetTaskInfoByCodeOperationCompleted(object arg) {
            if ((this.GetTaskInfoByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskInfoByCodeCompleted(this, new GetTaskInfoByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/ModifyAmbStation", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyAmbStation(string ambCode, string stationCode) {
            this.Invoke("ModifyAmbStation", new object[] {
                        ambCode,
                        stationCode});
        }
        
        /// <remarks/>
        public void ModifyAmbStationAsync(string ambCode, string stationCode) {
            this.ModifyAmbStationAsync(ambCode, stationCode, null);
        }
        
        /// <remarks/>
        public void ModifyAmbStationAsync(string ambCode, string stationCode, object userState) {
            if ((this.ModifyAmbStationOperationCompleted == null)) {
                this.ModifyAmbStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyAmbStationOperationCompleted);
            }
            this.InvokeAsync("ModifyAmbStation", new object[] {
                        ambCode,
                        stationCode}, this.ModifyAmbStationOperationCompleted, userState);
        }
        
        private void OnModifyAmbStationOperationCompleted(object arg) {
            if ((this.ModifyAmbStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyAmbStationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetTelephoneInfo", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TelephoneInfo GetTelephoneInfo(string teleCode) {
            object[] results = this.Invoke("GetTelephoneInfo", new object[] {
                        teleCode});
            return ((TelephoneInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTelephoneInfoAsync(string teleCode) {
            this.GetTelephoneInfoAsync(teleCode, null);
        }
        
        /// <remarks/>
        public void GetTelephoneInfoAsync(string teleCode, object userState) {
            if ((this.GetTelephoneInfoOperationCompleted == null)) {
                this.GetTelephoneInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTelephoneInfoOperationCompleted);
            }
            this.InvokeAsync("GetTelephoneInfo", new object[] {
                        teleCode}, this.GetTelephoneInfoOperationCompleted, userState);
        }
        
        private void OnGetTelephoneInfoOperationCompleted(object arg) {
            if ((this.GetTelephoneInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTelephoneInfoCompleted(this, new GetTelephoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/InsertAlarmCall", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAlarmCall(AlarmCallInfo[] acInfos) {
            this.Invoke("InsertAlarmCall", new object[] {
                        acInfos});
        }
        
        /// <remarks/>
        public void InsertAlarmCallAsync(AlarmCallInfo[] acInfos) {
            this.InsertAlarmCallAsync(acInfos, null);
        }
        
        /// <remarks/>
        public void InsertAlarmCallAsync(AlarmCallInfo[] acInfos, object userState) {
            if ((this.InsertAlarmCallOperationCompleted == null)) {
                this.InsertAlarmCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAlarmCallOperationCompleted);
            }
            this.InvokeAsync("InsertAlarmCall", new object[] {
                        acInfos}, this.InsertAlarmCallOperationCompleted, userState);
        }
        
        private void OnInsertAlarmCallOperationCompleted(object arg) {
            if ((this.InsertAlarmCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAlarmCallCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/InsertAlarmCallOther", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAlarmCallOther(AlarmCallOtherInfo[] acoInfos) {
            this.Invoke("InsertAlarmCallOther", new object[] {
                        acoInfos});
        }
        
        /// <remarks/>
        public void InsertAlarmCallOtherAsync(AlarmCallOtherInfo[] acoInfos) {
            this.InsertAlarmCallOtherAsync(acoInfos, null);
        }
        
        /// <remarks/>
        public void InsertAlarmCallOtherAsync(AlarmCallOtherInfo[] acoInfos, object userState) {
            if ((this.InsertAlarmCallOtherOperationCompleted == null)) {
                this.InsertAlarmCallOtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAlarmCallOtherOperationCompleted);
            }
            this.InvokeAsync("InsertAlarmCallOther", new object[] {
                        acoInfos}, this.InsertAlarmCallOtherOperationCompleted, userState);
        }
        
        private void OnInsertAlarmCallOtherOperationCompleted(object arg) {
            if ((this.InsertAlarmCallOtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAlarmCallOtherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetGpsDataSet", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGpsDataSet(string ambCode, System.DateTime beginTime, System.DateTime endTime) {
            object[] results = this.Invoke("GetGpsDataSet", new object[] {
                        ambCode,
                        beginTime,
                        endTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGpsDataSetAsync(string ambCode, System.DateTime beginTime, System.DateTime endTime) {
            this.GetGpsDataSetAsync(ambCode, beginTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetGpsDataSetAsync(string ambCode, System.DateTime beginTime, System.DateTime endTime, object userState) {
            if ((this.GetGpsDataSetOperationCompleted == null)) {
                this.GetGpsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGpsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetGpsDataSet", new object[] {
                        ambCode,
                        beginTime,
                        endTime}, this.GetGpsDataSetOperationCompleted, userState);
        }
        
        private void OnGetGpsDataSetOperationCompleted(object arg) {
            if ((this.GetGpsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGpsDataSetCompleted(this, new GetGpsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetGpsLastDataSet", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGpsLastDataSet() {
            object[] results = this.Invoke("GetGpsLastDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGpsLastDataSetAsync() {
            this.GetGpsLastDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetGpsLastDataSetAsync(object userState) {
            if ((this.GetGpsLastDataSetOperationCompleted == null)) {
                this.GetGpsLastDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGpsLastDataSetOperationCompleted);
            }
            this.InvokeAsync("GetGpsLastDataSet", new object[0], this.GetGpsLastDataSetOperationCompleted, userState);
        }
        
        private void OnGetGpsLastDataSetOperationCompleted(object arg) {
            if ((this.GetGpsLastDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGpsLastDataSetCompleted(this, new GetGpsLastDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetTaskGpsData", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaskGpsData(string taskCode) {
            object[] results = this.Invoke("GetTaskGpsData", new object[] {
                        taskCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskGpsDataAsync(string taskCode) {
            this.GetTaskGpsDataAsync(taskCode, null);
        }
        
        /// <remarks/>
        public void GetTaskGpsDataAsync(string taskCode, object userState) {
            if ((this.GetTaskGpsDataOperationCompleted == null)) {
                this.GetTaskGpsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskGpsDataOperationCompleted);
            }
            this.InvokeAsync("GetTaskGpsData", new object[] {
                        taskCode}, this.GetTaskGpsDataOperationCompleted, userState);
        }
        
        private void OnGetTaskGpsDataOperationCompleted(object arg) {
            if ((this.GetTaskGpsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskGpsDataCompleted(this, new GetTaskGpsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/StationMark", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StationMark(string stationCode, bool isMark, double x, double y) {
            this.Invoke("StationMark", new object[] {
                        stationCode,
                        isMark,
                        x,
                        y});
        }
        
        /// <remarks/>
        public void StationMarkAsync(string stationCode, bool isMark, double x, double y) {
            this.StationMarkAsync(stationCode, isMark, x, y, null);
        }
        
        /// <remarks/>
        public void StationMarkAsync(string stationCode, bool isMark, double x, double y, object userState) {
            if ((this.StationMarkOperationCompleted == null)) {
                this.StationMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStationMarkOperationCompleted);
            }
            this.InvokeAsync("StationMark", new object[] {
                        stationCode,
                        isMark,
                        x,
                        y}, this.StationMarkOperationCompleted, userState);
        }
        
        private void OnStationMarkOperationCompleted(object arg) {
            if ((this.StationMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StationMarkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/HospitalMark", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HospitalMark(string hospitalCode, bool isMark, double x, double y) {
            this.Invoke("HospitalMark", new object[] {
                        hospitalCode,
                        isMark,
                        x,
                        y});
        }
        
        /// <remarks/>
        public void HospitalMarkAsync(string hospitalCode, bool isMark, double x, double y) {
            this.HospitalMarkAsync(hospitalCode, isMark, x, y, null);
        }
        
        /// <remarks/>
        public void HospitalMarkAsync(string hospitalCode, bool isMark, double x, double y, object userState) {
            if ((this.HospitalMarkOperationCompleted == null)) {
                this.HospitalMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHospitalMarkOperationCompleted);
            }
            this.InvokeAsync("HospitalMark", new object[] {
                        hospitalCode,
                        isMark,
                        x,
                        y}, this.HospitalMarkOperationCompleted, userState);
        }
        
        private void OnHospitalMarkOperationCompleted(object arg) {
            if ((this.HospitalMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HospitalMarkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/TelephoneMark", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TelephoneMark(string teleCode, bool isMark, double x, double y) {
            this.Invoke("TelephoneMark", new object[] {
                        teleCode,
                        isMark,
                        x,
                        y});
        }
        
        /// <remarks/>
        public void TelephoneMarkAsync(string teleCode, bool isMark, double x, double y) {
            this.TelephoneMarkAsync(teleCode, isMark, x, y, null);
        }
        
        /// <remarks/>
        public void TelephoneMarkAsync(string teleCode, bool isMark, double x, double y, object userState) {
            if ((this.TelephoneMarkOperationCompleted == null)) {
                this.TelephoneMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTelephoneMarkOperationCompleted);
            }
            this.InvokeAsync("TelephoneMark", new object[] {
                        teleCode,
                        isMark,
                        x,
                        y}, this.TelephoneMarkOperationCompleted, userState);
        }
        
        private void OnTelephoneMarkOperationCompleted(object arg) {
            if ((this.TelephoneMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TelephoneMarkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/TelephoneSelect", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TelephoneSelect(string filterExpression) {
            object[] results = this.Invoke("TelephoneSelect", new object[] {
                        filterExpression});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TelephoneSelectAsync(string filterExpression) {
            this.TelephoneSelectAsync(filterExpression, null);
        }
        
        /// <remarks/>
        public void TelephoneSelectAsync(string filterExpression, object userState) {
            if ((this.TelephoneSelectOperationCompleted == null)) {
                this.TelephoneSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTelephoneSelectOperationCompleted);
            }
            this.InvokeAsync("TelephoneSelect", new object[] {
                        filterExpression}, this.TelephoneSelectOperationCompleted, userState);
        }
        
        private void OnTelephoneSelectOperationCompleted(object arg) {
            if ((this.TelephoneSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TelephoneSelectCompleted(this, new TelephoneSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/ReSendCommand", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReSendCommand(AlarmEventInfo aeInfo, AcceptEventInfo accInfo, TaskInfo taskInfo, string operatorCode, string deskCode) {
            this.Invoke("ReSendCommand", new object[] {
                        aeInfo,
                        accInfo,
                        taskInfo,
                        operatorCode,
                        deskCode});
        }
        
        /// <remarks/>
        public void ReSendCommandAsync(AlarmEventInfo aeInfo, AcceptEventInfo accInfo, TaskInfo taskInfo, string operatorCode, string deskCode) {
            this.ReSendCommandAsync(aeInfo, accInfo, taskInfo, operatorCode, deskCode, null);
        }
        
        /// <remarks/>
        public void ReSendCommandAsync(AlarmEventInfo aeInfo, AcceptEventInfo accInfo, TaskInfo taskInfo, string operatorCode, string deskCode, object userState) {
            if ((this.ReSendCommandOperationCompleted == null)) {
                this.ReSendCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReSendCommandOperationCompleted);
            }
            this.InvokeAsync("ReSendCommand", new object[] {
                        aeInfo,
                        accInfo,
                        taskInfo,
                        operatorCode,
                        deskCode}, this.ReSendCommandOperationCompleted, userState);
        }
        
        private void OnReSendCommandOperationCompleted(object arg) {
            if ((this.ReSendCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReSendCommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetNoticeMessage", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNoticeMessage(System.DateTime beginTime, System.DateTime endTime) {
            object[] results = this.Invoke("GetNoticeMessage", new object[] {
                        beginTime,
                        endTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoticeMessageAsync(System.DateTime beginTime, System.DateTime endTime) {
            this.GetNoticeMessageAsync(beginTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetNoticeMessageAsync(System.DateTime beginTime, System.DateTime endTime, object userState) {
            if ((this.GetNoticeMessageOperationCompleted == null)) {
                this.GetNoticeMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoticeMessageOperationCompleted);
            }
            this.InvokeAsync("GetNoticeMessage", new object[] {
                        beginTime,
                        endTime}, this.GetNoticeMessageOperationCompleted, userState);
        }
        
        private void OnGetNoticeMessageOperationCompleted(object arg) {
            if ((this.GetNoticeMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoticeMessageCompleted(this, new GetNoticeMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetNoticeLog", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNoticeLog(int noticeId) {
            object[] results = this.Invoke("GetNoticeLog", new object[] {
                        noticeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoticeLogAsync(int noticeId) {
            this.GetNoticeLogAsync(noticeId, null);
        }
        
        /// <remarks/>
        public void GetNoticeLogAsync(int noticeId, object userState) {
            if ((this.GetNoticeLogOperationCompleted == null)) {
                this.GetNoticeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoticeLogOperationCompleted);
            }
            this.InvokeAsync("GetNoticeLog", new object[] {
                        noticeId}, this.GetNoticeLogOperationCompleted, userState);
        }
        
        private void OnGetNoticeLogOperationCompleted(object arg) {
            if ((this.GetNoticeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoticeLogCompleted(this, new GetNoticeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/SaveNoticeMessage", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveNoticeMessage(string content, System.DateTime sendTime, string operatorCode, int typeId, string[] targetCode, string[] targetName) {
            this.Invoke("SaveNoticeMessage", new object[] {
                        content,
                        sendTime,
                        operatorCode,
                        typeId,
                        targetCode,
                        targetName});
        }
        
        /// <remarks/>
        public void SaveNoticeMessageAsync(string content, System.DateTime sendTime, string operatorCode, int typeId, string[] targetCode, string[] targetName) {
            this.SaveNoticeMessageAsync(content, sendTime, operatorCode, typeId, targetCode, targetName, null);
        }
        
        /// <remarks/>
        public void SaveNoticeMessageAsync(string content, System.DateTime sendTime, string operatorCode, int typeId, string[] targetCode, string[] targetName, object userState) {
            if ((this.SaveNoticeMessageOperationCompleted == null)) {
                this.SaveNoticeMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveNoticeMessageOperationCompleted);
            }
            this.InvokeAsync("SaveNoticeMessage", new object[] {
                        content,
                        sendTime,
                        operatorCode,
                        typeId,
                        targetCode,
                        targetName}, this.SaveNoticeMessageOperationCompleted, userState);
        }
        
        private void OnSaveNoticeMessageOperationCompleted(object arg) {
            if ((this.SaveNoticeMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveNoticeMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/OperatorLogIn", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OperatorLogIn(ref int id, string personCode, string personName, int personTypeId, string deskCode) {
            object[] results = this.Invoke("OperatorLogIn", new object[] {
                        id,
                        personCode,
                        personName,
                        personTypeId,
                        deskCode});
            id = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OperatorLogInAsync(int id, string personCode, string personName, int personTypeId, string deskCode) {
            this.OperatorLogInAsync(id, personCode, personName, personTypeId, deskCode, null);
        }
        
        /// <remarks/>
        public void OperatorLogInAsync(int id, string personCode, string personName, int personTypeId, string deskCode, object userState) {
            if ((this.OperatorLogInOperationCompleted == null)) {
                this.OperatorLogInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperatorLogInOperationCompleted);
            }
            this.InvokeAsync("OperatorLogIn", new object[] {
                        id,
                        personCode,
                        personName,
                        personTypeId,
                        deskCode}, this.OperatorLogInOperationCompleted, userState);
        }
        
        private void OnOperatorLogInOperationCompleted(object arg) {
            if ((this.OperatorLogInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperatorLogInCompleted(this, new OperatorLogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/OperatorLogOut", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OperatorLogOut(int lastId, string deskCode) {
            this.Invoke("OperatorLogOut", new object[] {
                        lastId,
                        deskCode});
        }
        
        /// <remarks/>
        public void OperatorLogOutAsync(int lastId, string deskCode) {
            this.OperatorLogOutAsync(lastId, deskCode, null);
        }
        
        /// <remarks/>
        public void OperatorLogOutAsync(int lastId, string deskCode, object userState) {
            if ((this.OperatorLogOutOperationCompleted == null)) {
                this.OperatorLogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperatorLogOutOperationCompleted);
            }
            this.InvokeAsync("OperatorLogOut", new object[] {
                        lastId,
                        deskCode}, this.OperatorLogOutOperationCompleted, userState);
        }
        
        private void OnOperatorLogOutOperationCompleted(object arg) {
            if ((this.OperatorLogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperatorLogOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/DeskChangeState", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeskChangeState(int lastId, string personCode, string personName, int personTypeId, string deskCode, string changeType) {
            object[] results = this.Invoke("DeskChangeState", new object[] {
                        lastId,
                        personCode,
                        personName,
                        personTypeId,
                        deskCode,
                        changeType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeskChangeStateAsync(int lastId, string personCode, string personName, int personTypeId, string deskCode, string changeType) {
            this.DeskChangeStateAsync(lastId, personCode, personName, personTypeId, deskCode, changeType, null);
        }
        
        /// <remarks/>
        public void DeskChangeStateAsync(int lastId, string personCode, string personName, int personTypeId, string deskCode, string changeType, object userState) {
            if ((this.DeskChangeStateOperationCompleted == null)) {
                this.DeskChangeStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeskChangeStateOperationCompleted);
            }
            this.InvokeAsync("DeskChangeState", new object[] {
                        lastId,
                        personCode,
                        personName,
                        personTypeId,
                        deskCode,
                        changeType}, this.DeskChangeStateOperationCompleted, userState);
        }
        
        private void OnDeskChangeStateOperationCompleted(object arg) {
            if ((this.DeskChangeStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeskChangeStateCompleted(this, new DeskChangeStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAmbulancePersonsByAmbulanceCode", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonInfo[] GetAmbulancePersonsByAmbulanceCode(string ambulanceCode) {
            object[] results = this.Invoke("GetAmbulancePersonsByAmbulanceCode", new object[] {
                        ambulanceCode});
            return ((PersonInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAmbulancePersonsByAmbulanceCodeAsync(string ambulanceCode) {
            this.GetAmbulancePersonsByAmbulanceCodeAsync(ambulanceCode, null);
        }
        
        /// <remarks/>
        public void GetAmbulancePersonsByAmbulanceCodeAsync(string ambulanceCode, object userState) {
            if ((this.GetAmbulancePersonsByAmbulanceCodeOperationCompleted == null)) {
                this.GetAmbulancePersonsByAmbulanceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmbulancePersonsByAmbulanceCodeOperationCompleted);
            }
            this.InvokeAsync("GetAmbulancePersonsByAmbulanceCode", new object[] {
                        ambulanceCode}, this.GetAmbulancePersonsByAmbulanceCodeOperationCompleted, userState);
        }
        
        private void OnGetAmbulancePersonsByAmbulanceCodeOperationCompleted(object arg) {
            if ((this.GetAmbulancePersonsByAmbulanceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmbulancePersonsByAmbulanceCodeCompleted(this, new GetAmbulancePersonsByAmbulanceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/ModifyOperatePersonPassword", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyOperatePersonPassword(string code, string password) {
            object[] results = this.Invoke("ModifyOperatePersonPassword", new object[] {
                        code,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOperatePersonPasswordAsync(string code, string password) {
            this.ModifyOperatePersonPasswordAsync(code, password, null);
        }
        
        /// <remarks/>
        public void ModifyOperatePersonPasswordAsync(string code, string password, object userState) {
            if ((this.ModifyOperatePersonPasswordOperationCompleted == null)) {
                this.ModifyOperatePersonPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOperatePersonPasswordOperationCompleted);
            }
            this.InvokeAsync("ModifyOperatePersonPassword", new object[] {
                        code,
                        password}, this.ModifyOperatePersonPasswordOperationCompleted, userState);
        }
        
        private void OnModifyOperatePersonPasswordOperationCompleted(object arg) {
            if ((this.ModifyOperatePersonPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOperatePersonPasswordCompleted(this, new ModifyOperatePersonPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetTelLog", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTelLog(System.DateTime beginTime, System.DateTime endTime, string telCode, int recordTypeId, int operateId, int resultId, string workCode, string deskCode) {
            object[] results = this.Invoke("GetTelLog", new object[] {
                        beginTime,
                        endTime,
                        telCode,
                        recordTypeId,
                        operateId,
                        resultId,
                        workCode,
                        deskCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTelLogAsync(System.DateTime beginTime, System.DateTime endTime, string telCode, int recordTypeId, int operateId, int resultId, string workCode, string deskCode) {
            this.GetTelLogAsync(beginTime, endTime, telCode, recordTypeId, operateId, resultId, workCode, deskCode, null);
        }
        
        /// <remarks/>
        public void GetTelLogAsync(System.DateTime beginTime, System.DateTime endTime, string telCode, int recordTypeId, int operateId, int resultId, string workCode, string deskCode, object userState) {
            if ((this.GetTelLogOperationCompleted == null)) {
                this.GetTelLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTelLogOperationCompleted);
            }
            this.InvokeAsync("GetTelLog", new object[] {
                        beginTime,
                        endTime,
                        telCode,
                        recordTypeId,
                        operateId,
                        resultId,
                        workCode,
                        deskCode}, this.GetTelLogOperationCompleted, userState);
        }
        
        private void OnGetTelLogOperationCompleted(object arg) {
            if ((this.GetTelLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTelLogCompleted(this, new GetTelLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetTelQueue", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTelQueue(System.DateTime beginTime, System.DateTime endTime, string telCode, int resultId) {
            object[] results = this.Invoke("GetTelQueue", new object[] {
                        beginTime,
                        endTime,
                        telCode,
                        resultId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTelQueueAsync(System.DateTime beginTime, System.DateTime endTime, string telCode, int resultId) {
            this.GetTelQueueAsync(beginTime, endTime, telCode, resultId, null);
        }
        
        /// <remarks/>
        public void GetTelQueueAsync(System.DateTime beginTime, System.DateTime endTime, string telCode, int resultId, object userState) {
            if ((this.GetTelQueueOperationCompleted == null)) {
                this.GetTelQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTelQueueOperationCompleted);
            }
            this.InvokeAsync("GetTelQueue", new object[] {
                        beginTime,
                        endTime,
                        telCode,
                        resultId}, this.GetTelQueueOperationCompleted, userState);
        }
        
        private void OnGetTelQueueOperationCompleted(object arg) {
            if ((this.GetTelQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTelQueueCompleted(this, new GetTelQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetAuthorizeInfo", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthorizeInfo GetAuthorizeInfo() {
            object[] results = this.Invoke("GetAuthorizeInfo", new object[0]);
            return ((AuthorizeInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthorizeInfoAsync() {
            this.GetAuthorizeInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAuthorizeInfoAsync(object userState) {
            if ((this.GetAuthorizeInfoOperationCompleted == null)) {
                this.GetAuthorizeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthorizeInfoOperationCompleted);
            }
            this.InvokeAsync("GetAuthorizeInfo", new object[0], this.GetAuthorizeInfoOperationCompleted, userState);
        }
        
        private void OnGetAuthorizeInfoOperationCompleted(object arg) {
            if ((this.GetAuthorizeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthorizeInfoCompleted(this, new GetAuthorizeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/InsertStationMsg", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertStationMsg(StationMsgInfo smInfo) {
            this.Invoke("InsertStationMsg", new object[] {
                        smInfo});
        }
        
        /// <remarks/>
        public void InsertStationMsgAsync(StationMsgInfo smInfo) {
            this.InsertStationMsgAsync(smInfo, null);
        }
        
        /// <remarks/>
        public void InsertStationMsgAsync(StationMsgInfo smInfo, object userState) {
            if ((this.InsertStationMsgOperationCompleted == null)) {
                this.InsertStationMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertStationMsgOperationCompleted);
            }
            this.InvokeAsync("InsertStationMsg", new object[] {
                        smInfo}, this.InsertStationMsgOperationCompleted, userState);
        }
        
        private void OnInsertStationMsgOperationCompleted(object arg) {
            if ((this.InsertStationMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertStationMsgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Anchor120V7.com/GetStationMsgDataSet", RequestNamespace="http://Anchor120V7.com/", ResponseNamespace="http://Anchor120V7.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStationMsgDataSet(string eventCode) {
            object[] results = this.Invoke("GetStationMsgDataSet", new object[] {
                        eventCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationMsgDataSetAsync(string eventCode) {
            this.GetStationMsgDataSetAsync(eventCode, null);
        }
        
        /// <remarks/>
        public void GetStationMsgDataSetAsync(string eventCode, object userState) {
            if ((this.GetStationMsgDataSetOperationCompleted == null)) {
                this.GetStationMsgDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationMsgDataSetOperationCompleted);
            }
            this.InvokeAsync("GetStationMsgDataSet", new object[] {
                        eventCode}, this.GetStationMsgDataSetOperationCompleted, userState);
        }
        
        private void OnGetStationMsgDataSetOperationCompleted(object arg) {
            if ((this.GetStationMsgDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationMsgDataSetCompleted(this, new GetStationMsgDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class TelephoneInfo {
        
        private string teleCodeField;
        
        private string nameField;
        
        private string sexField;
        
        private string ageField;
        
        private string homeAddrField;
        
        private string waitAddrField;
        
        private string diseaseHistoryField;
        
        private string linkPersonField;
        
        private string linkTelField;
        
        private string extensionField;
        
        private bool isVIPField;
        
        private bool isMarkedField;
        
        private double xField;
        
        private double yField;
        
        private string remarkField;
        
        private System.Nullable<System.DateTime> lastestTimeField;
        
        private string lastestTypeField;
        
        /// <remarks/>
        public string TeleCode {
            get {
                return this.teleCodeField;
            }
            set {
                this.teleCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string HomeAddr {
            get {
                return this.homeAddrField;
            }
            set {
                this.homeAddrField = value;
            }
        }
        
        /// <remarks/>
        public string WaitAddr {
            get {
                return this.waitAddrField;
            }
            set {
                this.waitAddrField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseHistory {
            get {
                return this.diseaseHistoryField;
            }
            set {
                this.diseaseHistoryField = value;
            }
        }
        
        /// <remarks/>
        public string LinkPerson {
            get {
                return this.linkPersonField;
            }
            set {
                this.linkPersonField = value;
            }
        }
        
        /// <remarks/>
        public string LinkTel {
            get {
                return this.linkTelField;
            }
            set {
                this.linkTelField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVIP {
            get {
                return this.isVIPField;
            }
            set {
                this.isVIPField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMarked {
            get {
                return this.isMarkedField;
            }
            set {
                this.isMarkedField = value;
            }
        }
        
        /// <remarks/>
        public double X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public double Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastestTime {
            get {
                return this.lastestTimeField;
            }
            set {
                this.lastestTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LastestType {
            get {
                return this.lastestTypeField;
            }
            set {
                this.lastestTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class StationMsgInfo {
        
        private int idField;
        
        private string eventCodeField;
        
        private System.DateTime receiveTimeField;
        
        private string stationCodeField;
        
        private string personCodeField;
        
        private int typeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string EventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReceiveTime {
            get {
                return this.receiveTimeField;
            }
            set {
                this.receiveTimeField = value;
            }
        }
        
        /// <remarks/>
        public string StationCode {
            get {
                return this.stationCodeField;
            }
            set {
                this.stationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PersonCode {
            get {
                return this.personCodeField;
            }
            set {
                this.personCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AuthorizeInfo {
        
        private System.Nullable<int> licDeskCountField;
        
        private int systemDeskCountField;
        
        private System.Nullable<int> licAmbulanceTerminalCountField;
        
        private int systemAmbulanceTerminalCountField;
        
        private System.Nullable<int> licStationCountField;
        
        private int systemStationCountField;
        
        private System.Nullable<int> licHospitalCountField;
        
        private int systemHospitalCountField;
        
        private string illegalInfoField;
        
        private bool isAuthorizeFileLegalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LicDeskCount {
            get {
                return this.licDeskCountField;
            }
            set {
                this.licDeskCountField = value;
            }
        }
        
        /// <remarks/>
        public int SystemDeskCount {
            get {
                return this.systemDeskCountField;
            }
            set {
                this.systemDeskCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LicAmbulanceTerminalCount {
            get {
                return this.licAmbulanceTerminalCountField;
            }
            set {
                this.licAmbulanceTerminalCountField = value;
            }
        }
        
        /// <remarks/>
        public int SystemAmbulanceTerminalCount {
            get {
                return this.systemAmbulanceTerminalCountField;
            }
            set {
                this.systemAmbulanceTerminalCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LicStationCount {
            get {
                return this.licStationCountField;
            }
            set {
                this.licStationCountField = value;
            }
        }
        
        /// <remarks/>
        public int SystemStationCount {
            get {
                return this.systemStationCountField;
            }
            set {
                this.systemStationCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LicHospitalCount {
            get {
                return this.licHospitalCountField;
            }
            set {
                this.licHospitalCountField = value;
            }
        }
        
        /// <remarks/>
        public int SystemHospitalCount {
            get {
                return this.systemHospitalCountField;
            }
            set {
                this.systemHospitalCountField = value;
            }
        }
        
        /// <remarks/>
        public string IllegalInfo {
            get {
                return this.illegalInfoField;
            }
            set {
                this.illegalInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAuthorizeFileLegal {
            get {
                return this.isAuthorizeFileLegalField;
            }
            set {
                this.isAuthorizeFileLegalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AlarmCallOtherInfo {
        
        private System.DateTime phoneBeginTimeField;
        
        private System.Nullable<System.DateTime> ringTimeField;
        
        private System.Nullable<System.DateTime> phoneEndTimeField;
        
        private string deskCodeField;
        
        private string operatorPersonCodeField;
        
        private int typeIdField;
        
        private string callingNumberField;
        
        private string recordCodeField;
        
        private bool isCallOutField;
        
        private string remarkField;
        
        private int centerIdField;
        
        /// <remarks/>
        public System.DateTime PhoneBeginTime {
            get {
                return this.phoneBeginTimeField;
            }
            set {
                this.phoneBeginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RingTime {
            get {
                return this.ringTimeField;
            }
            set {
                this.ringTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PhoneEndTime {
            get {
                return this.phoneEndTimeField;
            }
            set {
                this.phoneEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DeskCode {
            get {
                return this.deskCodeField;
            }
            set {
                this.deskCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorPersonCode {
            get {
                return this.operatorPersonCodeField;
            }
            set {
                this.operatorPersonCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string CallingNumber {
            get {
                return this.callingNumberField;
            }
            set {
                this.callingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RecordCode {
            get {
                return this.recordCodeField;
            }
            set {
                this.recordCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCallOut {
            get {
                return this.isCallOutField;
            }
            set {
                this.isCallOutField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int CenterId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AlarmCallInfo {
        
        private System.DateTime phoneBeginTimeField;
        
        private System.Nullable<System.DateTime> ringTimeField;
        
        private System.Nullable<System.DateTime> phoneEndTimeField;
        
        private string deskCodeField;
        
        private string operatorPersonCodeField;
        
        private int typeIdField;
        
        private string eventCodeField;
        
        private string callingNumberField;
        
        private string recordCodeField;
        
        private bool isCallOutField;
        
        private string remarkField;
        
        private int centerIdField;
        
        /// <remarks/>
        public System.DateTime PhoneBeginTime {
            get {
                return this.phoneBeginTimeField;
            }
            set {
                this.phoneBeginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RingTime {
            get {
                return this.ringTimeField;
            }
            set {
                this.ringTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PhoneEndTime {
            get {
                return this.phoneEndTimeField;
            }
            set {
                this.phoneEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DeskCode {
            get {
                return this.deskCodeField;
            }
            set {
                this.deskCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorPersonCode {
            get {
                return this.operatorPersonCodeField;
            }
            set {
                this.operatorPersonCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string EventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CallingNumber {
            get {
                return this.callingNumberField;
            }
            set {
                this.callingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RecordCode {
            get {
                return this.recordCodeField;
            }
            set {
                this.recordCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCallOut {
            get {
                return this.isCallOutField;
            }
            set {
                this.isCallOutField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int CenterId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class TaskInfo {
        
        private string codeField;
        
        private string eventCodeField;
        
        private int acceptOrderField;
        
        private int taskOrderField;
        
        private string userOrderField;
        
        private string operatorCodeField;
        
        private string stationCodeField;
        
        private string ambulanceCodeField;
        
        private bool isPerformingField;
        
        private System.DateTime createTaskTimeField;
        
        private System.Nullable<System.DateTime> receiveCmdTimeField;
        
        private System.Nullable<System.DateTime> ambulanceLeaveTimeField;
        
        private System.Nullable<System.DateTime> arriveSceneTimeField;
        
        private System.Nullable<System.DateTime> leaveSceneTimeField;
        
        private System.Nullable<System.DateTime> arriveHospitalTimeField;
        
        private System.Nullable<System.DateTime> finishTimeField;
        
        private System.Nullable<System.DateTime> returnTimeField;
        
        private System.Nullable<double> helpDistanceField;
        
        private double travelDistanceField;
        
        private bool isNormalFinishField;
        
        private int abnormalReasonIdField;
        
        private int cureAmountField;
        
        private bool isFromStationField;
        
        private string driverField;
        
        private string doctorField;
        
        private string nurseField;
        
        private string litterField;
        
        private string salverField;
        
        private string reassignTaskCodeField;
        
        private string realSendAddrField;
        
        private string remarkField;
        
        private int centerIdField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string EventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        public int AcceptOrder {
            get {
                return this.acceptOrderField;
            }
            set {
                this.acceptOrderField = value;
            }
        }
        
        /// <remarks/>
        public int TaskOrder {
            get {
                return this.taskOrderField;
            }
            set {
                this.taskOrderField = value;
            }
        }
        
        /// <remarks/>
        public string UserOrder {
            get {
                return this.userOrderField;
            }
            set {
                this.userOrderField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorCode {
            get {
                return this.operatorCodeField;
            }
            set {
                this.operatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string StationCode {
            get {
                return this.stationCodeField;
            }
            set {
                this.stationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AmbulanceCode {
            get {
                return this.ambulanceCodeField;
            }
            set {
                this.ambulanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPerforming {
            get {
                return this.isPerformingField;
            }
            set {
                this.isPerformingField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTaskTime {
            get {
                return this.createTaskTimeField;
            }
            set {
                this.createTaskTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReceiveCmdTime {
            get {
                return this.receiveCmdTimeField;
            }
            set {
                this.receiveCmdTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AmbulanceLeaveTime {
            get {
                return this.ambulanceLeaveTimeField;
            }
            set {
                this.ambulanceLeaveTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ArriveSceneTime {
            get {
                return this.arriveSceneTimeField;
            }
            set {
                this.arriveSceneTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LeaveSceneTime {
            get {
                return this.leaveSceneTimeField;
            }
            set {
                this.leaveSceneTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ArriveHospitalTime {
            get {
                return this.arriveHospitalTimeField;
            }
            set {
                this.arriveHospitalTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.finishTimeField;
            }
            set {
                this.finishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReturnTime {
            get {
                return this.returnTimeField;
            }
            set {
                this.returnTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> HelpDistance {
            get {
                return this.helpDistanceField;
            }
            set {
                this.helpDistanceField = value;
            }
        }
        
        /// <remarks/>
        public double TravelDistance {
            get {
                return this.travelDistanceField;
            }
            set {
                this.travelDistanceField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNormalFinish {
            get {
                return this.isNormalFinishField;
            }
            set {
                this.isNormalFinishField = value;
            }
        }
        
        /// <remarks/>
        public int AbnormalReasonId {
            get {
                return this.abnormalReasonIdField;
            }
            set {
                this.abnormalReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public int CureAmount {
            get {
                return this.cureAmountField;
            }
            set {
                this.cureAmountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFromStation {
            get {
                return this.isFromStationField;
            }
            set {
                this.isFromStationField = value;
            }
        }
        
        /// <remarks/>
        public string Driver {
            get {
                return this.driverField;
            }
            set {
                this.driverField = value;
            }
        }
        
        /// <remarks/>
        public string Doctor {
            get {
                return this.doctorField;
            }
            set {
                this.doctorField = value;
            }
        }
        
        /// <remarks/>
        public string Nurse {
            get {
                return this.nurseField;
            }
            set {
                this.nurseField = value;
            }
        }
        
        /// <remarks/>
        public string Litter {
            get {
                return this.litterField;
            }
            set {
                this.litterField = value;
            }
        }
        
        /// <remarks/>
        public string Salver {
            get {
                return this.salverField;
            }
            set {
                this.salverField = value;
            }
        }
        
        /// <remarks/>
        public string ReassignTaskCode {
            get {
                return this.reassignTaskCodeField;
            }
            set {
                this.reassignTaskCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RealSendAddr {
            get {
                return this.realSendAddrField;
            }
            set {
                this.realSendAddrField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int CenterId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AmbulanceInfo {
        
        private string codeField;
        
        private string stationCodeField;
        
        private int typeIdField;
        
        private string tradeMarkField;
        
        private string realSignField;
        
        private int commandAspectIdField;
        
        private string taskCodeField;
        
        private int taskOrderField;
        
        private string userOrderField;
        
        private int workStateIdField;
        
        private int ondutyTaskCountField;
        
        private string driverField;
        
        private string doctorField;
        
        private string nurseField;
        
        private string litterField;
        
        private string salverField;
        
        private System.Nullable<System.DateTime> keyPressTimeField;
        
        private string followTelField;
        
        private int groupNumberField;
        
        private int levelIdField;
        
        private bool isOnlineField;
        
        private bool isValidField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string StationCode {
            get {
                return this.stationCodeField;
            }
            set {
                this.stationCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string TradeMark {
            get {
                return this.tradeMarkField;
            }
            set {
                this.tradeMarkField = value;
            }
        }
        
        /// <remarks/>
        public string RealSign {
            get {
                return this.realSignField;
            }
            set {
                this.realSignField = value;
            }
        }
        
        /// <remarks/>
        public int CommandAspectId {
            get {
                return this.commandAspectIdField;
            }
            set {
                this.commandAspectIdField = value;
            }
        }
        
        /// <remarks/>
        public string TaskCode {
            get {
                return this.taskCodeField;
            }
            set {
                this.taskCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TaskOrder {
            get {
                return this.taskOrderField;
            }
            set {
                this.taskOrderField = value;
            }
        }
        
        /// <remarks/>
        public string UserOrder {
            get {
                return this.userOrderField;
            }
            set {
                this.userOrderField = value;
            }
        }
        
        /// <remarks/>
        public int WorkStateId {
            get {
                return this.workStateIdField;
            }
            set {
                this.workStateIdField = value;
            }
        }
        
        /// <remarks/>
        public int OndutyTaskCount {
            get {
                return this.ondutyTaskCountField;
            }
            set {
                this.ondutyTaskCountField = value;
            }
        }
        
        /// <remarks/>
        public string Driver {
            get {
                return this.driverField;
            }
            set {
                this.driverField = value;
            }
        }
        
        /// <remarks/>
        public string Doctor {
            get {
                return this.doctorField;
            }
            set {
                this.doctorField = value;
            }
        }
        
        /// <remarks/>
        public string Nurse {
            get {
                return this.nurseField;
            }
            set {
                this.nurseField = value;
            }
        }
        
        /// <remarks/>
        public string Litter {
            get {
                return this.litterField;
            }
            set {
                this.litterField = value;
            }
        }
        
        /// <remarks/>
        public string Salver {
            get {
                return this.salverField;
            }
            set {
                this.salverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> KeyPressTime {
            get {
                return this.keyPressTimeField;
            }
            set {
                this.keyPressTimeField = value;
            }
        }
        
        /// <remarks/>
        public string FollowTel {
            get {
                return this.followTelField;
            }
            set {
                this.followTelField = value;
            }
        }
        
        /// <remarks/>
        public int GroupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        public int LevelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class ParameterNetInfo {
        
        private string ctiServerIPField;
        
        private int ctiPortField;
        
        private string[] gpsServerIPListField;
        
        private int gpsPortField;
        
        private string broadcastIPField;
        
        private int commonPortField;
        
        private string recordServerIPField;
        
        private int recordPortField;
        
        /// <remarks/>
        public string CtiServerIP {
            get {
                return this.ctiServerIPField;
            }
            set {
                this.ctiServerIPField = value;
            }
        }
        
        /// <remarks/>
        public int CtiPort {
            get {
                return this.ctiPortField;
            }
            set {
                this.ctiPortField = value;
            }
        }
        
        /// <remarks/>
        public string[] GpsServerIPList {
            get {
                return this.gpsServerIPListField;
            }
            set {
                this.gpsServerIPListField = value;
            }
        }
        
        /// <remarks/>
        public int GpsPort {
            get {
                return this.gpsPortField;
            }
            set {
                this.gpsPortField = value;
            }
        }
        
        /// <remarks/>
        public string BroadcastIP {
            get {
                return this.broadcastIPField;
            }
            set {
                this.broadcastIPField = value;
            }
        }
        
        /// <remarks/>
        public int CommonPort {
            get {
                return this.commonPortField;
            }
            set {
                this.commonPortField = value;
            }
        }
        
        /// <remarks/>
        public string RecordServerIP {
            get {
                return this.recordServerIPField;
            }
            set {
                this.recordServerIPField = value;
            }
        }
        
        /// <remarks/>
        public int RecordPort {
            get {
                return this.recordPortField;
            }
            set {
                this.recordPortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class DeskInfo {
        
        private string codeField;
        
        private string machineNameField;
        
        private string showNameField;
        
        private string extensionNumField;
        
        private string aCDDeskCodeField;
        
        private string dispatcherCodeField;
        
        private int typeIdField;
        
        private string machineCodeField;
        
        private string tnField;
        
        private System.Nullable<int> machineFlagField;
        
        private System.Nullable<int> aCDLocationFlagField;
        
        private System.Nullable<int> aCDPriorityField;
        
        private bool isMonitorField;
        
        private System.Nullable<int> integerFieldField;
        
        private string characterFieldField;
        
        private string ipField;
        
        private bool isValidField;
        
        private int centerIdField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShowName {
            get {
                return this.showNameField;
            }
            set {
                this.showNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExtensionNum {
            get {
                return this.extensionNumField;
            }
            set {
                this.extensionNumField = value;
            }
        }
        
        /// <remarks/>
        public string ACDDeskCode {
            get {
                return this.aCDDeskCodeField;
            }
            set {
                this.aCDDeskCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DispatcherCode {
            get {
                return this.dispatcherCodeField;
            }
            set {
                this.dispatcherCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string MachineCode {
            get {
                return this.machineCodeField;
            }
            set {
                this.machineCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TN {
            get {
                return this.tnField;
            }
            set {
                this.tnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MachineFlag {
            get {
                return this.machineFlagField;
            }
            set {
                this.machineFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ACDLocationFlag {
            get {
                return this.aCDLocationFlagField;
            }
            set {
                this.aCDLocationFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ACDPriority {
            get {
                return this.aCDPriorityField;
            }
            set {
                this.aCDPriorityField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMonitor {
            get {
                return this.isMonitorField;
            }
            set {
                this.isMonitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IntegerField {
            get {
                return this.integerFieldField;
            }
            set {
                this.integerFieldField = value;
            }
        }
        
        /// <remarks/>
        public string CharacterField {
            get {
                return this.characterFieldField;
            }
            set {
                this.characterFieldField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
        
        /// <remarks/>
        public int CenterId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class HistoryStateInfo {
        
        private int workStateIDField;
        
        private int starNumField;
        
        private System.DateTime stateTimeField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public int WorkStateID {
            get {
                return this.workStateIDField;
            }
            set {
                this.workStateIDField = value;
            }
        }
        
        /// <remarks/>
        public int StarNum {
            get {
                return this.starNumField;
            }
            set {
                this.starNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StateTime {
            get {
                return this.stateTimeField;
            }
            set {
                this.stateTimeField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class PreTaskInfo {
        
        private string ambulanceCodeField;
        
        private string reassignStopTaskCodeField;
        
        private System.Nullable<double> distanceField;
        
        /// <remarks/>
        public string AmbulanceCode {
            get {
                return this.ambulanceCodeField;
            }
            set {
                this.ambulanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ReassignStopTaskCode {
            get {
                return this.reassignStopTaskCodeField;
            }
            set {
                this.reassignStopTaskCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AcceptEventInfo {
        
        private string eventCodeField;
        
        private int acceptOrderField;
        
        private int typeIdField;
        
        private int detailReasonIdField;
        
        private string acceptPersonCodeField;
        
        private string alarmTelField;
        
        private System.Nullable<System.DateTime> hangUpTimeField;
        
        private System.Nullable<System.DateTime> ringTimeField;
        
        private System.DateTime acceptBeginTimeField;
        
        private System.DateTime acceptEndTimeField;
        
        private System.Nullable<System.DateTime> commandTimeField;
        
        private string localAddrField;
        
        private string waitAddrField;
        
        private string sendAddrField;
        
        private int localAddrTypeIdField;
        
        private int sendAddrTypeIdField;
        
        private string linkManField;
        
        private string linkTelField;
        
        private string extensionField;
        
        private string patientNameField;
        
        private string sexField;
        
        private string ageField;
        
        private string folkField;
        
        private string nationalField;
        
        private string alarmReasonField;
        
        private string judgeField;
        
        private int illStateIdField;
        
        private bool isNeedLitterField;
        
        private int patientCountField;
        
        private string specialNeedField;
        
        private bool isLabeledField;
        
        private double xField;
        
        private double yField;
        
        private string ambulanceListField;
        
        private string backUpOneField;
        
        private string backUpTwoField;
        
        private string remarkField;
        
        private int centerIdField;
        
        /// <remarks/>
        public string EventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        public int AcceptOrder {
            get {
                return this.acceptOrderField;
            }
            set {
                this.acceptOrderField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public int DetailReasonId {
            get {
                return this.detailReasonIdField;
            }
            set {
                this.detailReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public string AcceptPersonCode {
            get {
                return this.acceptPersonCodeField;
            }
            set {
                this.acceptPersonCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AlarmTel {
            get {
                return this.alarmTelField;
            }
            set {
                this.alarmTelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> HangUpTime {
            get {
                return this.hangUpTimeField;
            }
            set {
                this.hangUpTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RingTime {
            get {
                return this.ringTimeField;
            }
            set {
                this.ringTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AcceptBeginTime {
            get {
                return this.acceptBeginTimeField;
            }
            set {
                this.acceptBeginTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AcceptEndTime {
            get {
                return this.acceptEndTimeField;
            }
            set {
                this.acceptEndTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CommandTime {
            get {
                return this.commandTimeField;
            }
            set {
                this.commandTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LocalAddr {
            get {
                return this.localAddrField;
            }
            set {
                this.localAddrField = value;
            }
        }
        
        /// <remarks/>
        public string WaitAddr {
            get {
                return this.waitAddrField;
            }
            set {
                this.waitAddrField = value;
            }
        }
        
        /// <remarks/>
        public string SendAddr {
            get {
                return this.sendAddrField;
            }
            set {
                this.sendAddrField = value;
            }
        }
        
        /// <remarks/>
        public int LocalAddrTypeId {
            get {
                return this.localAddrTypeIdField;
            }
            set {
                this.localAddrTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int SendAddrTypeId {
            get {
                return this.sendAddrTypeIdField;
            }
            set {
                this.sendAddrTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string LinkMan {
            get {
                return this.linkManField;
            }
            set {
                this.linkManField = value;
            }
        }
        
        /// <remarks/>
        public string LinkTel {
            get {
                return this.linkTelField;
            }
            set {
                this.linkTelField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string Folk {
            get {
                return this.folkField;
            }
            set {
                this.folkField = value;
            }
        }
        
        /// <remarks/>
        public string National {
            get {
                return this.nationalField;
            }
            set {
                this.nationalField = value;
            }
        }
        
        /// <remarks/>
        public string AlarmReason {
            get {
                return this.alarmReasonField;
            }
            set {
                this.alarmReasonField = value;
            }
        }
        
        /// <remarks/>
        public string Judge {
            get {
                return this.judgeField;
            }
            set {
                this.judgeField = value;
            }
        }
        
        /// <remarks/>
        public int IllStateId {
            get {
                return this.illStateIdField;
            }
            set {
                this.illStateIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNeedLitter {
            get {
                return this.isNeedLitterField;
            }
            set {
                this.isNeedLitterField = value;
            }
        }
        
        /// <remarks/>
        public int PatientCount {
            get {
                return this.patientCountField;
            }
            set {
                this.patientCountField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialNeed {
            get {
                return this.specialNeedField;
            }
            set {
                this.specialNeedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLabeled {
            get {
                return this.isLabeledField;
            }
            set {
                this.isLabeledField = value;
            }
        }
        
        /// <remarks/>
        public double X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public double Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public string AmbulanceList {
            get {
                return this.ambulanceListField;
            }
            set {
                this.ambulanceListField = value;
            }
        }
        
        /// <remarks/>
        public string BackUpOne {
            get {
                return this.backUpOneField;
            }
            set {
                this.backUpOneField = value;
            }
        }
        
        /// <remarks/>
        public string BackUpTwo {
            get {
                return this.backUpTwoField;
            }
            set {
                this.backUpTwoField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int CenterId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AlarmEventInfo {
        
        private string eventCodeField;
        
        private string firstCallField;
        
        private string nameField;
        
        private int sourceIdField;
        
        private int typeIdField;
        
        private int accidentTypeIdField;
        
        private int accidentLevelIdField;
        
        private bool isTestField;
        
        private int acceptCountField;
        
        private int rejectCountField;
        
        private int totalTaskCountField;
        
        private int currentTaskCountField;
        
        private int stopCountField;
        
        private string firstOperatorPersonCodeField;
        
        private System.DateTime firstAcceptTimeField;
        
        private System.Nullable<System.DateTime> hangupTimeField;
        
        private System.Nullable<System.DateTime> subscriptionTimeField;
        
        private System.Nullable<System.DateTime> firstDispatchTimeField;
        
        private bool isHangupField;
        
        private bool isLabeledField;
        
        private double xField;
        
        private double yField;
        
        private string areaField;
        
        private string occupantDeskCodeField;
        
        private int centerIdField;
        
        private bool finishSignField;
        
        /// <remarks/>
        public string EventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FirstCall {
            get {
                return this.firstCallField;
            }
            set {
                this.firstCallField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int SourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccidentTypeId {
            get {
                return this.accidentTypeIdField;
            }
            set {
                this.accidentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccidentLevelId {
            get {
                return this.accidentLevelIdField;
            }
            set {
                this.accidentLevelIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTest {
            get {
                return this.isTestField;
            }
            set {
                this.isTestField = value;
            }
        }
        
        /// <remarks/>
        public int AcceptCount {
            get {
                return this.acceptCountField;
            }
            set {
                this.acceptCountField = value;
            }
        }
        
        /// <remarks/>
        public int RejectCount {
            get {
                return this.rejectCountField;
            }
            set {
                this.rejectCountField = value;
            }
        }
        
        /// <remarks/>
        public int TotalTaskCount {
            get {
                return this.totalTaskCountField;
            }
            set {
                this.totalTaskCountField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentTaskCount {
            get {
                return this.currentTaskCountField;
            }
            set {
                this.currentTaskCountField = value;
            }
        }
        
        /// <remarks/>
        public int StopCount {
            get {
                return this.stopCountField;
            }
            set {
                this.stopCountField = value;
            }
        }
        
        /// <remarks/>
        public string FirstOperatorPersonCode {
            get {
                return this.firstOperatorPersonCodeField;
            }
            set {
                this.firstOperatorPersonCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstAcceptTime {
            get {
                return this.firstAcceptTimeField;
            }
            set {
                this.firstAcceptTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> HangupTime {
            get {
                return this.hangupTimeField;
            }
            set {
                this.hangupTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SubscriptionTime {
            get {
                return this.subscriptionTimeField;
            }
            set {
                this.subscriptionTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FirstDispatchTime {
            get {
                return this.firstDispatchTimeField;
            }
            set {
                this.firstDispatchTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHangup {
            get {
                return this.isHangupField;
            }
            set {
                this.isHangupField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLabeled {
            get {
                return this.isLabeledField;
            }
            set {
                this.isLabeledField = value;
            }
        }
        
        /// <remarks/>
        public double X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public double Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string OccupantDeskCode {
            get {
                return this.occupantDeskCodeField;
            }
            set {
                this.occupantDeskCodeField = value;
            }
        }
        
        /// <remarks/>
        public int CenterId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
        
        /// <remarks/>
        public bool FinishSign {
            get {
                return this.finishSignField;
            }
            set {
                this.finishSignField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class AmbulanceCommandRecordInfo {
        
        private string ambCodeField;
        
        private string taskCodeField;
        
        private string operatorCodeField;
        
        private System.DateTime operateTimeField;
        
        private int eventTypeIdField;
        
        private string localAddrField;
        
        private string waitAddrField;
        
        private string sendAddrField;
        
        private string helpCallNumberField;
        
        private string contactManField;
        
        private string contactPhoneField;
        
        private string extField;
        
        private string patientNameField;
        
        private string sexField;
        
        private string ageField;
        
        private string folkField;
        
        private string nationalField;
        
        private string alarmReasonField;
        
        private string judgeField;
        
        private int illStateIdField;
        
        private bool isNeedLitterField;
        
        private string specialRequestField;
        
        private int patientCountField;
        
        private bool isMarkField;
        
        private double xField;
        
        private double yField;
        
        private string remarkField;
        
        /// <remarks/>
        public string AmbCode {
            get {
                return this.ambCodeField;
            }
            set {
                this.ambCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TaskCode {
            get {
                return this.taskCodeField;
            }
            set {
                this.taskCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorCode {
            get {
                return this.operatorCodeField;
            }
            set {
                this.operatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OperateTime {
            get {
                return this.operateTimeField;
            }
            set {
                this.operateTimeField = value;
            }
        }
        
        /// <remarks/>
        public int EventTypeId {
            get {
                return this.eventTypeIdField;
            }
            set {
                this.eventTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string LocalAddr {
            get {
                return this.localAddrField;
            }
            set {
                this.localAddrField = value;
            }
        }
        
        /// <remarks/>
        public string WaitAddr {
            get {
                return this.waitAddrField;
            }
            set {
                this.waitAddrField = value;
            }
        }
        
        /// <remarks/>
        public string SendAddr {
            get {
                return this.sendAddrField;
            }
            set {
                this.sendAddrField = value;
            }
        }
        
        /// <remarks/>
        public string HelpCallNumber {
            get {
                return this.helpCallNumberField;
            }
            set {
                this.helpCallNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ContactMan {
            get {
                return this.contactManField;
            }
            set {
                this.contactManField = value;
            }
        }
        
        /// <remarks/>
        public string ContactPhone {
            get {
                return this.contactPhoneField;
            }
            set {
                this.contactPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Ext {
            get {
                return this.extField;
            }
            set {
                this.extField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string Folk {
            get {
                return this.folkField;
            }
            set {
                this.folkField = value;
            }
        }
        
        /// <remarks/>
        public string National {
            get {
                return this.nationalField;
            }
            set {
                this.nationalField = value;
            }
        }
        
        /// <remarks/>
        public string AlarmReason {
            get {
                return this.alarmReasonField;
            }
            set {
                this.alarmReasonField = value;
            }
        }
        
        /// <remarks/>
        public string Judge {
            get {
                return this.judgeField;
            }
            set {
                this.judgeField = value;
            }
        }
        
        /// <remarks/>
        public int IllStateId {
            get {
                return this.illStateIdField;
            }
            set {
                this.illStateIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNeedLitter {
            get {
                return this.isNeedLitterField;
            }
            set {
                this.isNeedLitterField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialRequest {
            get {
                return this.specialRequestField;
            }
            set {
                this.specialRequestField = value;
            }
        }
        
        /// <remarks/>
        public int PatientCount {
            get {
                return this.patientCountField;
            }
            set {
                this.patientCountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMark {
            get {
                return this.isMarkField;
            }
            set {
                this.isMarkField = value;
            }
        }
        
        /// <remarks/>
        public double X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public double Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public partial class PersonInfo {
        
        private string codeField;
        
        private string stationCodeField;
        
        private string unitCodeField;
        
        private string phoneNumberField;
        
        private string messageNumberField;
        
        private int typeIdField;
        
        private string nameField;
        
        private string workCodeField;
        
        private string passwordField;
        
        private string bindAmbulanceCodeField;
        
        private System.DateTime lastTimeOnDutyField;
        
        private string occupantDeskCodeField;
        
        private int orderField;
        
        private bool isValidField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string StationCode {
            get {
                return this.stationCodeField;
            }
            set {
                this.stationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UnitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MessageNumber {
            get {
                return this.messageNumberField;
            }
            set {
                this.messageNumberField = value;
            }
        }
        
        /// <remarks/>
        public int TypeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCode {
            get {
                return this.workCodeField;
            }
            set {
                this.workCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string BindAmbulanceCode {
            get {
                return this.bindAmbulanceCodeField;
            }
            set {
                this.bindAmbulanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastTimeOnDuty {
            get {
                return this.lastTimeOnDutyField;
            }
            set {
                this.lastTimeOnDutyField = value;
            }
        }
        
        /// <remarks/>
        public string OccupantDeskCode {
            get {
                return this.occupantDeskCodeField;
            }
            set {
                this.occupantDeskCodeField = value;
            }
        }
        
        /// <remarks/>
        public int Order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Anchor120V7.com/")]
    public enum ESendAmbulanceType {
        
        /// <remarks/>
        ESAT_NewAlarm,
        
        /// <remarks/>
        ESAT_Reinforce,
        
        /// <remarks/>
        ESAT_Waken,
        
        /// <remarks/>
        ESAT_Reassign,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllCompletedEventHandler(object sender, GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RefreshAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStationsCompletedEventHandler(object sender, GetStationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTelephoneInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAmbulancesCompletedEventHandler(object sender, GetAmbulancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmbulancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmbulancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLatestAlarmEventsCompletedEventHandler(object sender, GetLatestAlarmEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestAlarmEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestAlarmEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllDispatcherDeskCompletedEventHandler(object sender, GetAllDispatcherDeskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDispatcherDeskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDispatcherDeskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAmbulancePersonsCompletedEventHandler(object sender, GetAmbulancePersonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmbulancePersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmbulancePersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllDictionaryCompletedEventHandler(object sender, GetAllDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHospitalsCompletedEventHandler(object sender, GetHospitalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperatorPersonsCompletedEventHandler(object sender, GetOperatorPersonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorPersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorPersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAmbulanceTerminalsCompletedEventHandler(object sender, GetAmbulanceTerminalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmbulanceTerminalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmbulanceTerminalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCentersCompletedEventHandler(object sender, GetCentersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCentersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCentersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAmbulanceCommandRecordCompletedEventHandler(object sender, GetAmbulanceCommandRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmbulanceCommandRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmbulanceCommandRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AmbulanceCommandRecordInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AmbulanceCommandRecordInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendAmbulanceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HangupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelHangupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RejectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyDescribleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EventLockCompletedEventHandler(object sender, EventLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EventUnLockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StopTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PauseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResumeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AmbulancePersonCheckInCompletedEventHandler(object sender, AmbulancePersonCheckInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AmbulancePersonCheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AmbulancePersonCheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AmbulancePersonCheckOutCompletedEventHandler(object sender, AmbulancePersonCheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AmbulancePersonCheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AmbulancePersonCheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateHistoryStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAmbOnlineStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EventFinishCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeskInfoByMachineNameCompletedEventHandler(object sender, GetDeskInfoByMachineNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeskInfoByMachineNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeskInfoByMachineNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeskInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeskInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetParameterNetInfoCompletedEventHandler(object sender, GetParameterNetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParameterNetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParameterNetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParameterNetInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParameterNetInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAmbInfoListCompletedEventHandler(object sender, GetAmbInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmbInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmbInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AmbulanceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AmbulanceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateRealSendHospitalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEventAndAcceptCompletedEventHandler(object sender, GetEventAndAcceptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventAndAcceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventAndAcceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlarmEventInfo aeInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlarmEventInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public AcceptEventInfo accInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptEventInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEventChildsInfoCompletedEventHandler(object sender, GetEventChildsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventChildsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventChildsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlarmEventInfo aeInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlarmEventInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public AcceptEventInfo accInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptEventInfo)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public TaskInfo taskInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskInfo)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int taskCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet alarmCallDataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAcceptAndTaskCompletedEventHandler(object sender, GetAcceptAndTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAcceptAndTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAcceptAndTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcceptEventInfo accInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcceptEventInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public TaskInfo taskInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskInfo)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int taskCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTaskInfoByCodeCompletedEventHandler(object sender, GetTaskInfoByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskInfoByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskInfoByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyAmbStationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTelephoneInfoCompletedEventHandler(object sender, GetTelephoneInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTelephoneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTelephoneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TelephoneInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TelephoneInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertAlarmCallCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertAlarmCallOtherCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGpsDataSetCompletedEventHandler(object sender, GetGpsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGpsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGpsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGpsLastDataSetCompletedEventHandler(object sender, GetGpsLastDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGpsLastDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGpsLastDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTaskGpsDataCompletedEventHandler(object sender, GetTaskGpsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskGpsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskGpsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StationMarkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HospitalMarkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TelephoneMarkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TelephoneSelectCompletedEventHandler(object sender, TelephoneSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TelephoneSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TelephoneSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReSendCommandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNoticeMessageCompletedEventHandler(object sender, GetNoticeMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoticeMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoticeMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNoticeLogCompletedEventHandler(object sender, GetNoticeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoticeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoticeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveNoticeMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OperatorLogInCompletedEventHandler(object sender, OperatorLogInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperatorLogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperatorLogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OperatorLogOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeskChangeStateCompletedEventHandler(object sender, DeskChangeStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeskChangeStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeskChangeStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAmbulancePersonsByAmbulanceCodeCompletedEventHandler(object sender, GetAmbulancePersonsByAmbulanceCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmbulancePersonsByAmbulanceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmbulancePersonsByAmbulanceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyOperatePersonPasswordCompletedEventHandler(object sender, ModifyOperatePersonPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOperatePersonPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOperatePersonPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTelLogCompletedEventHandler(object sender, GetTelLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTelLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTelLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTelQueueCompletedEventHandler(object sender, GetTelQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTelQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTelQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAuthorizeInfoCompletedEventHandler(object sender, GetAuthorizeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthorizeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthorizeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthorizeInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthorizeInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertStationMsgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStationMsgDataSetCompletedEventHandler(object sender, GetStationMsgDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationMsgDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationMsgDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591